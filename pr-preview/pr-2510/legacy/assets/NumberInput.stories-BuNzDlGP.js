import{j as o,r as l}from"./iframe-n26UMXeS.js";import{I as _}from"./IconNook16-CeIIZpix.js";import{V as n}from"./validation-C9S5KgfE.js";import{a as w}from"./Box-CdWvo43I.js";import{N as i}from"./NumberInput-N1mCDOR0.js";import"./preload-helper-qBSLZfTS.js";import"./borderStyle-D9jrV09G.js";import"./merge-DI-veSMP.js";import"./focusStyle-Ch_WJ4aJ.js";import"./input-D40wT2pM.js";import"./Button-RK0fJt2c.js";import"./useButton-gFYOqrhj.js";import"./useFocusable-CWl1t0Px.js";import"./useFocusRing-Dvm4_RjC.js";import"./useEffectEvent-BKR4RLzl.js";import"./chain-DHo8oKbw.js";import"./index-B6EMusBQ.js";import"./IconSize-BcCrF_mi.js";import"./Checkbox-DgsPUbUS.js";import"./useFormValidationState-UAnenpkk.js";import"./useControlledState-Du5HGgPR.js";import"./InputLabel-BS6vm496.js";import"./TooltipIcon-7gRO3xpH.js";import"./LegacyTooltip-B-tp1j-L.js";import"./useLink-DHkrUdNL.js";import"./usePopper-8GJMFvmR.js";import"./index-Ciia9_eN.js";import"./Portal-DP4PWg_F.js";import"./useMemoizedId-DnQ55Zbt.js";import"./IconCheckMark-C9N2YhL0.js";import"./IconExclamationMarkCircle24-C0dnCopv.js";import"./IconExclamationMarkTriangle-kgpzAyyM.js";import"./IconExclamationMarkTriangle24-BN0lOkUr.js";import"./IconQuestionMarkCircle-kllRKVHJ.js";import"./IconMinus-rsdKZ6mT.js";import"./Divider-Ckbmz0M0.js";import"./Dropdown-C_BrfEr1.js";import"./FocusScope-C8Zpguh7.js";import"./useOverlayTriggerState-1nRvvjHV.js";import"./useMenuTrigger-C5MWsixQ.js";import"./useLabels-CgjEQM3v.js";import"./useLocalizedStringFormatter-DSxe_DtD.js";import"./context-B86w2jMQ.js";import"./VisuallyHidden-D2sE3s5e.js";import"./helper-BXkLw819.js";import"./keyboard-rkNmKttm.js";import"./SelectionManager-DJu1uagb.js";import"./useField-0_eqc5fb.js";import"./MenuItem-CBqSMKaJ.js";import"./IconCaretRight-mt3-aM0r.js";import"./elements-BOYmskOL.js";import"./LoadingCircle-DvvoBJ3B.js";import"./Trigger-V8qnOHf7.js";import"./IconCaretDown-DzJI7I0k.js";import"./IconCaretDown16-Caxt19fQ.js";import"./IconCross-ORFPx4BQ.js";import"./IconTrashBin16-BPI3V-e4.js";import"./IconTrashBin24-D-7w7tG2.js";import"./EnablePortalWrapper-PUTSjtV1.js";import"./FormControl-NisUf2Hi.js";import"./Switch-5ZwYZc90.js";import"./TabItem-D3g2R93v.js";import"./TextInput-DBepdhBg.js";import"./Tooltip-Ca2P6eKM.js";import"./useClickOutside-CjWbNyju.js";import"./dialog-D9O7a7Fm.js";import"./Tree-CivgNCAA.js";import"./_Uint8Array-CwPxMkg2.js";import"./IconPlus16-CG57R1ra.js";const Fe={title:"Components/Number Input",component:i,tags:["autodocs"],args:{clearable:!1},argTypes:{decorator:{description:"Add decorator element to start of the input",name:"decorator",defaultValue:void 0},suffix:{description:"String to append to the input value.",name:"suffix",defaultValue:void 0,control:{type:"text"}},disabled:{type:"boolean",table:{type:{summary:"boolean | undefined"},defaultValue:{summary:!1}}},readOnly:{type:"boolean",table:{type:{summary:"boolean | undefined"},defaultValue:{summary:!1}}},controls:{description:"Enable increment buttons",name:"controls",defaultValue:!1,control:{type:"boolean"}},clearable:{description:"Enable clear button",name:"clearable",defaultValue:!1,control:{type:"boolean"}},hugWidth:{description:"If `true` element will have a `auto` width, else `full` width",defaultValue:!1,control:{type:"boolean"}},status:{description:"Set the current status of the input",name:"status",options:Object.values(n),control:{type:"select"},defaultValue:n.Default},stepInterval:{description:"Set the incremental value",name:"stepInterval",defaultValue:10,control:{type:"number"}},valueSelect:{description:"Highlight current input value.",name:"valueSelect",defaultValue:!1,control:{type:"boolean"}},onChange:{description:"onChange callback",name:"onChange",defaultValue:void 0,action:"onChange"},"data-test-id":{table:{disable:!0}}},parameters:{status:{type:"deprecated"},docs:{description:{component:'### This component is deprecated, please use the [new Text Input component](/docs/current_components-text-input--documentation) with `type="number"` instead.'}}}},t=e=>o.jsx(i,{...e,placeholder:"Enter a number..."});t.args={clearable:!0};const r=e=>o.jsx(i,{...e,controls:!0,decorator:o.jsx(_,{})}),a=e=>{const[x,v]=l.useState(n.Success),[N,W]=l.useState(!1),E=(p=0)=>{v(p<0?n.Error:n.Success),W(p<0)};return o.jsx(i,{...e,onChange:E,controls:!0,status:x,valueSelect:N,defaultValue:3})},s=e=>o.jsx(w,{className:"tw-w-[400px]",children:o.jsx(i,{...e,controls:!0,hugWidth:!0,placeholder:"Input has a width of `auto`"})});t.__docgenInfo={description:"",methods:[],displayName:"BaseUsage"};r.__docgenInfo={description:"",methods:[],displayName:"WithDecoratorAndIncrementable"};a.__docgenInfo={description:"",methods:[],displayName:"WithErrorLessThanZero"};s.__docgenInfo={description:"",methods:[],displayName:"WithHugWidth"};var m,u,c;t.parameters={...t.parameters,docs:{...(m=t.parameters)==null?void 0:m.docs,source:{originalSource:`args => {
  return <NumberInput {...args} placeholder="Enter a number..." />;
}`,...(c=(u=t.parameters)==null?void 0:u.docs)==null?void 0:c.source}}};var d,h,f;r.parameters={...r.parameters,docs:{...(d=r.parameters)==null?void 0:d.docs,source:{originalSource:`args => {
  return <NumberInput {...args} controls decorator={<IconNook16 />} />;
}`,...(f=(h=r.parameters)==null?void 0:h.docs)==null?void 0:f.source}}};var b,g,S;a.parameters={...a.parameters,docs:{...(b=a.parameters)==null?void 0:b.docs,source:{originalSource:`args => {
  const [status, setStatus] = useState<Validation>(Validation.Success);
  const [valueSelect, setValueSelect] = useState<boolean>(false);
  const handleValidation = (value: number = 0) => {
    setStatus(value < 0 ? Validation.Error : Validation.Success);
    setValueSelect(value < 0);
  };
  return <NumberInput {...args} onChange={handleValidation} controls status={status} valueSelect={valueSelect} defaultValue={3} />;
}`,...(S=(g=a.parameters)==null?void 0:g.docs)==null?void 0:S.source}}};var V,y,I;s.parameters={...s.parameters,docs:{...(V=s.parameters)==null?void 0:V.docs,source:{originalSource:`args => {
  return <Box className="tw-w-[400px]">
            <NumberInput {...args} controls hugWidth placeholder="Input has a width of \`auto\`" />
        </Box>;
}`,...(I=(y=s.parameters)==null?void 0:y.docs)==null?void 0:I.source}}};const Ge=["BaseUsage","WithDecoratorAndIncrementable","WithErrorLessThanZero","WithHugWidth"];export{t as BaseUsage,r as WithDecoratorAndIncrementable,a as WithErrorLessThanZero,s as WithHugWidth,Ge as __namedExportsOrder,Fe as default};
