import{j as g}from"./iframe-G9JT5kV6.js";import{B as b,a as i,S as v}from"./Box-BXjR2_Z3.js";import"./preload-helper-BT-T7auE.js";import"./borderStyle-D9jrV09G.js";import"./merge-DI-veSMP.js";import"./focusStyle-Ch_WJ4aJ.js";import"./input-CyIEBhYg.js";import"./Button-Bab7Gocy.js";import"./useButton-DRJTCrJS.js";import"./useFocusable-_OrUWNR5.js";import"./useFocusRing-nqJc486L.js";import"./useEffectEvent-BtkyKS4G.js";import"./chain-Dq4AkA76.js";import"./index-ixDem6kg.js";import"./IconSize-BcCrF_mi.js";import"./Divider-BphgxLdT.js";import"./Dropdown-DKBYnEUG.js";import"./FocusScope-BQmzPqxS.js";import"./useOverlayTriggerState-CMU_LIfs.js";import"./useControlledState-Cj5gkz49.js";import"./useMenuTrigger-BlRHj5bV.js";import"./useLabels-KuIW6JFx.js";import"./useLocalizedStringFormatter-M66PnT3E.js";import"./context-D-Ee0elB.js";import"./VisuallyHidden-e-4RAJYE.js";import"./helper-C4FDoqim.js";import"./keyboard-BKMGdIrx.js";import"./SelectionManager-BxHqVy6b.js";import"./useField-B7g4wq1Y.js";import"./useFormValidationState-CYiU8C3p.js";import"./usePopper-CO8wOoTT.js";import"./index-BIhVL1ld.js";import"./MenuItem-DdrQgOb6.js";import"./IconCaretRight-1JdDjgKO.js";import"./IconCheckMark-BSYvEIzf.js";import"./elements-BOYmskOL.js";import"./LoadingCircle-BnxRTcOc.js";import"./Trigger-B8TaoXJF.js";import"./IconCaretDown-CrHZrdXv.js";import"./IconCaretDown16-DcFtQQYB.js";import"./IconCross-Bqxox6ZH.js";import"./IconExclamationMarkTriangle-DVD-it4x.js";import"./IconExclamationMarkTriangle24-DCgtctLG.js";import"./IconTrashBin16-C34r7-hb.js";import"./IconTrashBin24-D6DR5WcG.js";import"./validation-C9S5KgfE.js";import"./EnablePortalWrapper-u-oEUjA8.js";import"./Portal-BaI4ybdx.js";import"./useMemoizedId-TQZvyQJc.js";import"./FormControl-Cp0g-HlA.js";import"./InputLabel-TK4YHNFL.js";import"./TooltipIcon-D4kwX34e.js";import"./LegacyTooltip-Dp6OP9ku.js";import"./useLink-CXoGfmc2.js";import"./IconExclamationMarkCircle24-Yrdvbpyd.js";import"./IconQuestionMarkCircle-COwcdCLG.js";import"./Switch-DK-d02t4.js";import"./TabItem-BJhUeMKX.js";import"./TextInput-CZsf1API.js";import"./Tooltip-CTni-LrV.js";import"./useClickOutside-Riqja6k4.js";import"./dialog-D9O7a7Fm.js";import"./Tree-CEaSpKgj.js";import"./_Uint8Array-CwPxMkg2.js";const t={options:Object.values(v),control:{type:"select"},defaultValue:""},Ct={title:"Layout/Box",component:i,tags:["autodocs"],argTypes:{className:{type:"string"},paddingX:t,paddingY:t,padding:t,marginX:t,marginY:t,margin:t,"data-test-id":{type:"string"},"aria-label":{type:"string"},as:{options:["div","span"],control:{type:"select"}},children:{table:{disable:!0}}},args:{className:"tw-font-bold tw-flex","data-test-id":b,children:"You can pass any props you want into this component. In the controls you can find examples with camelCased, aria and data attributes."},parameters:{status:{type:"deprecated"},docs:{description:{component:"### This component is deprecated, please use the [new Box layout component](/docs/current_layout-box--documentation) instead."}}}},p=h=>g.jsx(i,{...h}),e=p.bind({}),o=p.bind({});o.args={className:"tw-bg-box-positive hover:tw-bg-box-positive-hover tw-text-box-positive-inverse hover:tw-text-box-positive-inverse-hover"};const r=p.bind({});r.args={className:"tw-flex tw-bg-box-positive hover:tw-bg-box-positive-hover tw-text-box-positive-inverse hover:tw-text-box-positive-inverse-hover",children:g.jsx(i,{as:"span",children:"I am a Box component rendered as a span element inside another Box with display: flex."}),padding:16};var s,a,m;e.parameters={...e.parameters,docs:{...(s=e.parameters)==null?void 0:s.docs,source:{originalSource:`(args: Props) => {
  return <BoxComponent {...args} />;
}`,...(m=(a=e.parameters)==null?void 0:a.docs)==null?void 0:m.source}}};var n,c,d;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`(args: Props) => {
  return <BoxComponent {...args} />;
}`,...(d=(c=o.parameters)==null?void 0:c.docs)==null?void 0:d.source}}};var x,l,u;r.parameters={...r.parameters,docs:{...(x=r.parameters)==null?void 0:x.docs,source:{originalSource:`(args: Props) => {
  return <BoxComponent {...args} />;
}`,...(u=(l=r.parameters)==null?void 0:l.docs)==null?void 0:u.source}}};const Et=["Box","BoxWithAliasTokens","BoxWithNestedBoxAsSpan"];export{e as Box,o as BoxWithAliasTokens,r as BoxWithNestedBoxAsSpan,Et as __namedExportsOrder,Ct as default};
