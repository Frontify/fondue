import{j as d}from"./jsx-runtime-BYYWji4R.js";import{I as T}from"./LegacyTooltip-DwGdpKnT.js";import{I as S}from"./IconSize-BcCrF_mi.js";import{T as f,a as g}from"./TooltipIcon-CBNLwOmC.js";import"./index-ClcD9ViR.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./useLink-DLd-zCvm.js";import"./useFocusable-NpJIjJzn.js";import"./useFocusRing-CqhiwHAH.js";import"./useEffectEvent-23OTMzEQ.js";import"./chain-zZtnTS2i.js";import"./index-Cho7bklK.js";import"./usePopper-BHXQC2xD.js";import"./index-DlnOb27V.js";import"./Button-BkcxChke.js";import"./useButton-CmN_Qqm3.js";import"./focusStyle-BtNTXUM4.js";import"./merge-DI-veSMP.js";import"./Portal-B3A1C5qZ.js";import"./useMemoizedId-DU5NJZZj.js";import"./IconCheckMark-DDrIoLdu.js";import"./IconExclamationMarkCircle24-4UiwpX0o.js";import"./IconExclamationMarkTriangle-DOh84ahI.js";import"./IconExclamationMarkTriangle24-BCoex7hw.js";import"./IconQuestionMarkCircle-7EPrDyIp.js";const J={title:"Deprecated/TooltipIcon",component:g,tags:["autodocs"],argTypes:{triggerStyle:{options:Object.values(f),control:{type:"select"}}},args:{tooltip:{content:"Lorem ipsum dolor sit amet."},triggerStyle:"Primary"},parameters:{status:{type:"deprecated"},docs:{description:{component:"### This component is deprecated, please use the [new Tooltip component](/docs/current_components-tooltip--documentation) instead."}}}},e=I=>d.jsx(g,{...I}),r=e.bind({}),o=e.bind({});o.args={iconSize:S.Size20};const t=e.bind({});t.args={triggerIcon:d.jsx(T,{filled:!0})};var i,s,p;r.parameters={...r.parameters,docs:{...(i=r.parameters)==null?void 0:i.docs,source:{originalSource:`(args: TooltipIconProps) => {
  return <TooltipIcon {...args} />;
}`,...(p=(s=r.parameters)==null?void 0:s.docs)==null?void 0:p.source}}};var a,n,c;o.parameters={...o.parameters,docs:{...(a=o.parameters)==null?void 0:a.docs,source:{originalSource:`(args: TooltipIconProps) => {
  return <TooltipIcon {...args} />;
}`,...(c=(n=o.parameters)==null?void 0:n.docs)==null?void 0:c.source}}};var m,l,u;t.parameters={...t.parameters,docs:{...(m=t.parameters)==null?void 0:m.docs,source:{originalSource:`(args: TooltipIconProps) => {
  return <TooltipIcon {...args} />;
}`,...(u=(l=t.parameters)==null?void 0:l.docs)==null?void 0:u.source}}};const K=["WithDefaultIconSize","WithCustomIconSize","WithCustomIcon"];export{t as WithCustomIcon,o as WithCustomIconSize,r as WithDefaultIconSize,K as __namedExportsOrder,J as default};
