import{j as k}from"./jsx-runtime-DH9XN8A8.js";import{c as I,b as P}from"./useFocusable-BRFkliNn.js";import{$ as q}from"./useField-Cf7VimOC.js";import{a as R}from"./useFocusRing-CP9UJNUw.js";import{$ as T,d as S,C as y,c as D}from"./Checkbox-BYzjmVQc.js";import{a as $,d as E,c as L,e as M}from"./useFormValidationState-BKAFCnHb.js";import{r as p}from"./index-v7USjxUg.js";import{$ as O}from"./useControlledState-BSgwHaZM.js";import{m as A}from"./merge-DI-veSMP.js";const C=new WeakMap;function B(e,a){let{isDisabled:r,name:l,validationBehavior:u="aria"}=e,{isInvalid:c,validationErrors:f,validationDetails:s}=a.displayValidation,{labelProps:o,fieldProps:i,descriptionProps:t,errorMessageProps:n}=q({...e,labelElementType:"span",isInvalid:c,errorMessage:e.errorMessage||f});C.set(a,{name:l,descriptionId:t.id,errorMessageId:n.id,validationBehavior:u});let m=I(e,{labelable:!0}),{focusWithinProps:d}=R({onBlurWithin:e.onBlur,onFocusWithin:e.onFocus,onFocusWithinChange:e.onFocusChange});return{groupProps:P(m,{role:"group","aria-disabled":r||void 0,...i,...d}),labelProps:o,descriptionProps:t,errorMessageProps:n,isInvalid:c,validationErrors:f,validationDetails:s}}function H(e,a,r){const l=T({isReadOnly:e.isReadOnly||a.isReadOnly,isSelected:a.isSelected(e.value),onChange(h){h?a.addValue(e.value):a.removeValue(e.value),e.onChange&&e.onChange(h)}});let{name:u,descriptionId:c,errorMessageId:f,validationBehavior:s}=C.get(a);var o;s=(o=e.validationBehavior)!==null&&o!==void 0?o:s;let{realtimeValidation:i}=$({...e,value:l.isSelected,name:void 0,validationBehavior:"aria"}),t=p.useRef(E),n=()=>{a.setInvalid(e.value,i.isInvalid?i:t.current)};p.useEffect(n);let m=a.realtimeValidation.isInvalid?a.realtimeValidation:i,d=s==="native"?a.displayValidation:m;var b;let v=S({...e,isReadOnly:e.isReadOnly||a.isReadOnly,isDisabled:e.isDisabled||a.isDisabled,name:e.name||u,isRequired:(b=e.isRequired)!==null&&b!==void 0?b:a.isRequired,validationBehavior:s,[L]:{realtimeValidation:m,displayValidation:d,resetValidation:a.resetValidation,commitValidation:a.commitValidation,updateValidation(h){t.current=h,n()}}},l,r);return{...v,inputProps:{...v.inputProps,"aria-describedby":[e["aria-describedby"],a.isInvalid?f:null,c].filter(Boolean).join(" ")||void 0}}}function z(e={}){let[a,r]=O(e.value,e.defaultValue||[],e.onChange),l=!!e.isRequired&&a.length===0,u=p.useRef(new Map),c=$({...e,value:a}),f=c.displayValidation.isInvalid;var s;return{...c,value:a,setValue(i){e.isReadOnly||e.isDisabled||r(i)},isDisabled:e.isDisabled||!1,isReadOnly:e.isReadOnly||!1,isSelected(i){return a.includes(i)},addValue(i){e.isReadOnly||e.isDisabled||a.includes(i)||r(a.concat(i))},removeValue(i){e.isReadOnly||e.isDisabled||a.includes(i)&&r(a.filter(t=>t!==i))},toggleValue(i){e.isReadOnly||e.isDisabled||(a.includes(i)?r(a.filter(t=>t!==i)):r(a.concat(i)))},setInvalid(i,t){let n=new Map(u.current);t.isInvalid?n.set(i,t):n.delete(i),u.current=n,c.updateValidation(M(...n.values()))},validationState:(s=e.validationState)!==null&&s!==void 0?s:f?"invalid":null,isInvalid:f,isRequired:l}}var j=(e=>(e.Horizontal="Horizontal",e.Vertical="Vertical",e))(j||{});const _={1:"tw-grid-cols-1",2:"tw-grid-cols-2",3:"tw-grid-cols-3",4:"tw-grid-cols-4"},W=({checkbox:e,state:a,forwardedRef:r})=>{const l=p.useRef(null),{value:u,disabled:c,label:f,"aria-label":s,state:o}=e,[i,t]=p.useState(o),n=a.isSelected(u),{inputProps:m}=H({value:u,isDisabled:c,"aria-label":s||f},a,l);return p.useEffect(()=>{i===y.Mixed&&!n?t(y.Mixed):t(n?y.Checked:y.Unchecked)},[i,n]),p.useEffect(()=>{r&&l.current&&r(l.current)},[n]),k.jsx(D,{...e,state:i,groupInputProps:m,ref:l})},F=(e,a)=>{if(!a||a<=1)return"";const r="auto / span",l=e.length%a;return l===0?"":`${r} ${a-l+1}`},x=({checkboxes:e,setActiveValues:a,ariaLabel:r="Checklist",activeValues:l=[],direction:u="Horizontal","data-test-id":c="checklist",...f})=>{const s=p.useRef(Array.from({length:e.length})),o=p.useRef(null),i=z({value:l,onChange:a}),{groupProps:t}=B({"aria-label":r},i),n="columns"in f&&f.columns||1;return p.useLayoutEffect(()=>{const m=b=>{const v=s.current.filter(w=>w!==null);let g=v.indexOf(document.activeElement);if(b.key==="ArrowDown"||b.key==="ArrowRight")g++,g===v.length&&(g=0),v[g].disabled&&g++;else if(b.key==="ArrowUp"||b.key==="ArrowLeft")g--,g===-1&&(g=v.length-1),v[g].disabled&&g--;else return;v[g].focus();const V=new KeyboardEvent("keyup",{key:"Tab",code:"Tab",keyCode:9,bubbles:!0});v[g].dispatchEvent(V)},d=o.current;return d==null||d.addEventListener("keydown",m),()=>{d==null||d.removeEventListener("keydown",m)}},[e.length]),k.jsx("div",{...t,"data-test-id":c,className:A([u==="Horizontal"?"tw-flex tw-flex-row tw-gap-12":`tw-grid tw-gap-4 ${_[n]}`]),ref:o,children:e.map((m,d)=>{var b;return k.jsx("div",{style:{maxWidth:(b=o==null?void 0:o.current)==null?void 0:b.getBoundingClientRect().width,gridColumn:d===e.length-1&&u==="Vertical"?F(e,n):void 0},children:k.jsx(W,{checkbox:m,state:i,forwardedRef:v=>s.current[d]=v})},m.value)})})};x.displayName="FondueChecklist";x.__docgenInfo={description:"",methods:[],displayName:"FondueChecklist",props:{checkboxes:{required:!0,tsType:{name:"Array",elements:[{name:"intersection",raw:"Omit<CheckboxProps, 'onChange' | 'groupInputProps' | 'value'> & { value: string }",elements:[{name:"Omit",elements:[{name:"signature",type:"object",raw:`{
    id?: string;
    state?: CheckboxState;
    emphasis?: CheckboxEmphasis;
    size?: CheckboxSize;
    disabled?: boolean;
    required?: boolean;
    value?: string;
    onChange?: (isChecked: boolean) => void;
    label?: string;
    hideLabel?: boolean;
    tooltip?: InputLabelTooltipProps;
    helperText?: string;
    'aria-label'?: string;
    groupInputProps?: HTMLAttributes<HTMLElement>;
    'data-test-id'?: string;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!1}},{key:"state",value:{name:"CheckboxState",required:!1}},{key:"emphasis",value:{name:"CheckboxEmphasis",required:!1}},{key:"size",value:{name:"CheckboxSize",required:!1}},{key:"disabled",value:{name:"boolean",required:!1}},{key:"required",value:{name:"boolean",required:!1}},{key:"value",value:{name:"string",required:!1}},{key:"onChange",value:{name:"signature",type:"function",raw:"(isChecked: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"isChecked"}],return:{name:"void"}},required:!1}},{key:"label",value:{name:"string",required:!1}},{key:"hideLabel",value:{name:"boolean",required:!1}},{key:"tooltip",value:{name:"union",raw:`| (LegacyTooltipProps & Pick<TooltipIconProps, 'triggerStyle' | 'triggerIcon'>)
| (LegacyTooltipProps & Pick<TooltipIconProps, 'triggerStyle' | 'triggerIcon'>)[]`,elements:[{name:"unknown"},{name:"Array",elements:[{name:"unknown"}],raw:"(LegacyTooltipProps & Pick<TooltipIconProps, 'triggerStyle' | 'triggerIcon'>)[]"}],required:!1}},{key:"helperText",value:{name:"string",required:!1}},{key:"aria-label",value:{name:"string",required:!1}},{key:"groupInputProps",value:{name:"HTMLAttributes",elements:[{name:"HTMLElement"}],raw:"HTMLAttributes<HTMLElement>",required:!1}},{key:"data-test-id",value:{name:"string",required:!1}}]}},{name:"union",raw:"'onChange' | 'groupInputProps' | 'value'",elements:[{name:"literal",value:"'onChange'"},{name:"literal",value:"'groupInputProps'"},{name:"literal",value:"'value'"}]}],raw:"Omit<CheckboxProps, 'onChange' | 'groupInputProps' | 'value'>"},{name:"signature",type:"object",raw:"{ value: string }",signature:{properties:[{key:"value",value:{name:"string",required:!0}}]}}]}],raw:"CheckboxValue[]"},description:""},setActiveValues:{required:!0,tsType:{name:"signature",type:"function",raw:"(value: string[]) => void",signature:{arguments:[{type:{name:"Array",elements:[{name:"string"}],raw:"string[]"},name:"value"}],return:{name:"void"}}},description:""},activeValues:{required:!1,tsType:{name:"Array",elements:[{name:"string"}],raw:"string[]"},description:"",defaultValue:{value:"[]",computed:!1}},ariaLabel:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"'Checklist'",computed:!1}},"data-test-id":{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"'checklist'",computed:!1}},direction:{required:!1,tsType:{name:"union",raw:"ChecklistDirection.Vertical | ChecklistDirection.Horizontal",elements:[{name:"ChecklistDirection.Vertical"},{name:"ChecklistDirection.Horizontal"}]},description:"",defaultValue:{value:"ChecklistDirection.Horizontal",computed:!0}},columns:{required:!1,tsType:{name:"union",raw:"1 | 2 | 3 | 4",elements:[{name:"literal",value:"1"},{name:"literal",value:"2"},{name:"literal",value:"3"},{name:"literal",value:"4"}]},description:""}}};export{x as C,j as a};
