import{r as s,j as a}from"./iframe-BUwuV1Yf.js";import{I as l}from"./IconIcon-Damteozg.js";import{F as p,a as r,b as m}from"./FieldsetHeader-BUfjQ62P.js";import"./preload-helper-D5qcpbyD.js";import"./IconSize-BcCrF_mi.js";import"./IconIcon16-DxfFCBIM.js";import"./IconIcon24-BA35c84T.js";import"./Switch-D05wI1x6.js";import"./useFocusRing-nkcyuVCu.js";import"./useEffectEvent-C8ZkU_FO.js";import"./InputLabel-DALiNwSO.js";import"./TooltipIcon-DyuJgYqN.js";import"./LegacyTooltip-D4QAG0oL.js";import"./useLink-D1XjKdgA.js";import"./useFocusable-CuB4bBD4.js";import"./chain-Dr8tyQvf.js";import"./index-DegWOD3f.js";import"./usePopper-z-jt1pka.js";import"./index-CkYX0QpS.js";import"./Button-B1NN_lii.js";import"./useButton-C805vYYB.js";import"./focusStyle-Ch_WJ4aJ.js";import"./merge-DI-veSMP.js";import"./Portal-CAM_NOt5.js";import"./useMemoizedId-B9nxXXF7.js";import"./IconCheckMark-B2wISUKN.js";import"./IconExclamationMarkCircle24-BFFkaWMT.js";import"./IconExclamationMarkTriangle-Y0VcjXdq.js";import"./IconExclamationMarkTriangle24-BUDlRL3H.js";import"./IconQuestionMarkCircle-XjewWxwc.js";import"./IconCaretDown-BzmTZ2Y3.js";import"./IconCaretDown16-BqORmrlh.js";import"./IconMinus-PokNf3jM.js";import"./IconMinus16-CLUo64wd.js";import"./IconPlus-BfZR7G9m.js";import"./IconPlus16-BasC6Ouw.js";const U={title:"Deprecated/Fieldset Header",component:m,tags:["autodocs"],argTypes:{size:{options:[r.Small,r.Medium,r.Large],control:{type:"radio"}},type:{options:Object.values(p),control:{type:"radio"}}},args:{size:r.Large,active:!0,type:p.Default,disabled:!1,bold:!0,children:"Heading",decorator:!0}},t=e=>{const[i,o]=s.useState(e.active);return s.useEffect(()=>{o(e.active)},[e.active]),a.jsx(m,{...e,decorator:e.decorator?a.jsx(l,{}):null,active:i,onClick:()=>o(!i)})};t.__docgenInfo={description:"",methods:[],displayName:"FieldsetHeader",props:{size:{required:!1,tsType:{name:"FieldsetHeaderSize"},description:""},active:{required:!1,tsType:{name:"boolean"},description:""},decorator:{required:!1,tsType:{name:"ReactNode"},description:""},type:{required:!1,tsType:{name:"FieldsetHeaderType"},description:""},disabled:{required:!1,tsType:{name:"boolean"},description:""},bold:{required:!1,tsType:{name:"boolean"},description:""},children:{required:!0,tsType:{name:"string"},description:""},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},as:{required:!1,tsType:{name:"JSX.IntrinsicElements"},description:""},tabIndex:{required:!1,tsType:{name:"number"},description:""},"data-test-id":{required:!1,tsType:{name:"string"},description:""}}};var d,n,c;t.parameters={...t.parameters,docs:{...(d=t.parameters)==null?void 0:d.docs,source:{originalSource:`(args: FieldsetHeaderProps) => {
  const [active, setActive] = useState(args.active);
  useEffect(() => {
    setActive(args.active);
  }, [args.active]);
  return <FieldsetHeaderComponent {...args} decorator={args.decorator ? <IconIcon /> : null} active={active} onClick={() => setActive(!active)} />;
}`,...(c=(n=t.parameters)==null?void 0:n.docs)==null?void 0:c.source}}};const V=["FieldsetHeader"];export{t as FieldsetHeader,V as __namedExportsOrder,U as default};
