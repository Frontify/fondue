import{j as g}from"./iframe-8Aj-00-r.js";import{B as b,a as i,S as v}from"./Box-BnsoD87U.js";import"./preload-helper-ClJkntjM.js";import"./borderStyle-D9jrV09G.js";import"./merge-DI-veSMP.js";import"./focusStyle-Ch_WJ4aJ.js";import"./input-Cb-cDZ2G.js";import"./Button-CG-0nyWt.js";import"./useButton-Dojg9qor.js";import"./useFocusable-BwZ_9y-T.js";import"./useFocusRing-qG24ebph.js";import"./useEffectEvent-Cq9opHnK.js";import"./chain-BjqAHd5L.js";import"./index-DCNbMVtB.js";import"./IconSize-BcCrF_mi.js";import"./Divider-Cb8yJJpF.js";import"./Dropdown-C-O-Den-.js";import"./FocusScope-CTjdKyO5.js";import"./useOverlayTriggerState-ChNjsbrI.js";import"./useControlledState-D_xv8YeC.js";import"./useMenuTrigger-B56YI9sB.js";import"./useLabels-CzFGOsdE.js";import"./useLocalizedStringFormatter-B8RupXhl.js";import"./context-DJA_byga.js";import"./VisuallyHidden-pr9n8Eu6.js";import"./helper-CFr4oJ23.js";import"./keyboard-BqGaruCr.js";import"./SelectionManager-BrlFgUVk.js";import"./useField-BLaRcGJ8.js";import"./useFormValidationState-QoNIVx9j.js";import"./usePopper-CXS_WYpq.js";import"./index-Dnw8Dsyi.js";import"./MenuItem-DpQE8dX8.js";import"./IconCaretRight-Dx4qKvYw.js";import"./IconCheckMark-W08NCNhP.js";import"./elements-BOYmskOL.js";import"./LoadingCircle-CiFVWgYB.js";import"./Trigger-Bafp_Ri-.js";import"./IconCaretDown-ByO_B0hy.js";import"./IconCaretDown16-l4VSPtYz.js";import"./IconCross-BxAiCgtg.js";import"./IconExclamationMarkTriangle-CTaWxLT5.js";import"./IconExclamationMarkTriangle24-DBim1kUj.js";import"./IconTrashBin16-DiEpovv2.js";import"./IconTrashBin24-CL9xT_lP.js";import"./validation-C9S5KgfE.js";import"./EnablePortalWrapper-doVjENwO.js";import"./Portal-Bz1ny3RM.js";import"./useMemoizedId-CGc7h3BS.js";import"./FormControl-DsARninL.js";import"./InputLabel-DPPpQodA.js";import"./TooltipIcon-Di_0n2EP.js";import"./LegacyTooltip-C9tle7yu.js";import"./useLink-BNAZ-U-L.js";import"./IconExclamationMarkCircle24-wOO7RqI2.js";import"./IconQuestionMarkCircle-DR6B91h_.js";import"./Switch-CG7Fwrxc.js";import"./TabItem-_H69nyMB.js";import"./TextInput-p2yGTJcX.js";import"./Tooltip-Bgz3MuCc.js";import"./useClickOutside-E2Pu4nAj.js";import"./dialog-D9O7a7Fm.js";import"./Tree-LcjhZUHT.js";import"./_Uint8Array-CwPxMkg2.js";const t={options:Object.values(v),control:{type:"select"},defaultValue:""},Ct={title:"Layout/Box",component:i,tags:["autodocs"],argTypes:{className:{type:"string"},paddingX:t,paddingY:t,padding:t,marginX:t,marginY:t,margin:t,"data-test-id":{type:"string"},"aria-label":{type:"string"},as:{options:["div","span"],control:{type:"select"}},children:{table:{disable:!0}}},args:{className:"tw-font-bold tw-flex","data-test-id":b,children:"You can pass any props you want into this component. In the controls you can find examples with camelCased, aria and data attributes."},parameters:{status:{type:"deprecated"},docs:{description:{component:"### This component is deprecated, please use the [new Box layout component](/docs/current_layout-box--documentation) instead."}}}},p=h=>g.jsx(i,{...h}),e=p.bind({}),o=p.bind({});o.args={className:"tw-bg-box-positive hover:tw-bg-box-positive-hover tw-text-box-positive-inverse hover:tw-text-box-positive-inverse-hover"};const r=p.bind({});r.args={className:"tw-flex tw-bg-box-positive hover:tw-bg-box-positive-hover tw-text-box-positive-inverse hover:tw-text-box-positive-inverse-hover",children:g.jsx(i,{as:"span",children:"I am a Box component rendered as a span element inside another Box with display: flex."}),padding:16};var s,a,m;e.parameters={...e.parameters,docs:{...(s=e.parameters)==null?void 0:s.docs,source:{originalSource:`(args: Props) => {
  return <BoxComponent {...args} />;
}`,...(m=(a=e.parameters)==null?void 0:a.docs)==null?void 0:m.source}}};var n,c,d;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`(args: Props) => {
  return <BoxComponent {...args} />;
}`,...(d=(c=o.parameters)==null?void 0:c.docs)==null?void 0:d.source}}};var x,l,u;r.parameters={...r.parameters,docs:{...(x=r.parameters)==null?void 0:x.docs,source:{originalSource:`(args: Props) => {
  return <BoxComponent {...args} />;
}`,...(u=(l=r.parameters)==null?void 0:l.docs)==null?void 0:u.source}}};const Et=["Box","BoxWithAliasTokens","BoxWithNestedBoxAsSpan"];export{e as Box,o as BoxWithAliasTokens,r as BoxWithNestedBoxAsSpan,Et as __namedExportsOrder,Ct as default};
