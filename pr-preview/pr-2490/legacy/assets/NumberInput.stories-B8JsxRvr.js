import{j as o,r as l}from"./iframe-DQZoCshs.js";import{I as _}from"./IconNook16-DKDaZiz8.js";import{V as n}from"./validation-C9S5KgfE.js";import{a as w}from"./Box-BDl1uIVb.js";import{N as i}from"./NumberInput-BZr8P4DE.js";import"./preload-helper-ClJkntjM.js";import"./borderStyle-D9jrV09G.js";import"./merge-DI-veSMP.js";import"./focusStyle-Ch_WJ4aJ.js";import"./input-z8GwYBpE.js";import"./Button-ytMoA_uz.js";import"./useButton-CsNnQIPX.js";import"./useFocusable-BBQoLTeh.js";import"./useFocusRing-DzC-uLC_.js";import"./useEffectEvent-CGYJKY5S.js";import"./chain-BuRxycqd.js";import"./index-B8qXirP9.js";import"./IconSize-BcCrF_mi.js";import"./Checkbox-C4MvX6Ye.js";import"./useFormValidationState-DbKGDjYr.js";import"./useControlledState-CtyZ7QgW.js";import"./InputLabel-Dzdxn41b.js";import"./TooltipIcon-C7r6FNKp.js";import"./LegacyTooltip-CDAdmYGm.js";import"./useLink-LUVwUCH7.js";import"./usePopper-DszYhXja.js";import"./index-3IyLkK9K.js";import"./Portal-BKobMvb1.js";import"./useMemoizedId-D0yBRadr.js";import"./IconCheckMark-CjcfOY3h.js";import"./IconExclamationMarkCircle24-YH8jJSgF.js";import"./IconExclamationMarkTriangle-CBiEK6F-.js";import"./IconExclamationMarkTriangle24-DjctIpBj.js";import"./IconQuestionMarkCircle-DwleYyem.js";import"./IconMinus-CfoqbIj7.js";import"./Divider-D7lSDPcQ.js";import"./Dropdown-CqY_CMr7.js";import"./FocusScope-DH9wDV-9.js";import"./useOverlayTriggerState-C6YZ0OW1.js";import"./useMenuTrigger-OXhk5r7d.js";import"./useLabels-CxTsjsBe.js";import"./useLocalizedStringFormatter-IWxdoe4l.js";import"./context-CP3_KLJu.js";import"./VisuallyHidden-qmSAPGWI.js";import"./helper-DVQH8vyC.js";import"./keyboard-QJqQzFc3.js";import"./SelectionManager-DwoBoMb8.js";import"./useField-Bk-U2Zzd.js";import"./MenuItem-Dw3WqHed.js";import"./IconCaretRight-Ez1SMPuo.js";import"./elements-BOYmskOL.js";import"./LoadingCircle-BvV7T1zK.js";import"./Trigger-C9FqWfj_.js";import"./IconCaretDown-0NTUtVqi.js";import"./IconCaretDown16-jWrqagMd.js";import"./IconCross-BUNknNaW.js";import"./IconTrashBin16-D30EDo3n.js";import"./IconTrashBin24-C2S7T8fv.js";import"./EnablePortalWrapper-B7pwOcwp.js";import"./FormControl-Nwry38Le.js";import"./Switch-BG7E8pTO.js";import"./TabItem-AjV6Ylio.js";import"./TextInput-BtZ3-Qgd.js";import"./Tooltip-ClLcCziU.js";import"./useClickOutside-BW83cRIA.js";import"./dialog-D9O7a7Fm.js";import"./Tree-BdFovfk1.js";import"./_Uint8Array-CwPxMkg2.js";import"./IconPlus16-Cm2NxGzy.js";const Fe={title:"Components/Number Input",component:i,tags:["autodocs"],args:{clearable:!1},argTypes:{decorator:{description:"Add decorator element to start of the input",name:"decorator",defaultValue:void 0},suffix:{description:"String to append to the input value.",name:"suffix",defaultValue:void 0,control:{type:"text"}},disabled:{type:"boolean",table:{type:{summary:"boolean | undefined"},defaultValue:{summary:!1}}},readOnly:{type:"boolean",table:{type:{summary:"boolean | undefined"},defaultValue:{summary:!1}}},controls:{description:"Enable increment buttons",name:"controls",defaultValue:!1,control:{type:"boolean"}},clearable:{description:"Enable clear button",name:"clearable",defaultValue:!1,control:{type:"boolean"}},hugWidth:{description:"If `true` element will have a `auto` width, else `full` width",defaultValue:!1,control:{type:"boolean"}},status:{description:"Set the current status of the input",name:"status",options:Object.values(n),control:{type:"select"},defaultValue:n.Default},stepInterval:{description:"Set the incremental value",name:"stepInterval",defaultValue:10,control:{type:"number"}},valueSelect:{description:"Highlight current input value.",name:"valueSelect",defaultValue:!1,control:{type:"boolean"}},onChange:{description:"onChange callback",name:"onChange",defaultValue:void 0,action:"onChange"},"data-test-id":{table:{disable:!0}}},parameters:{status:{type:"deprecated"},docs:{description:{component:'### This component is deprecated, please use the [new Text Input component](/docs/current_components-text-input--documentation) with `type="number"` instead.'}}}},t=e=>o.jsx(i,{...e,placeholder:"Enter a number..."});t.args={clearable:!0};const r=e=>o.jsx(i,{...e,controls:!0,decorator:o.jsx(_,{})}),a=e=>{const[x,v]=l.useState(n.Success),[N,W]=l.useState(!1),E=(p=0)=>{v(p<0?n.Error:n.Success),W(p<0)};return o.jsx(i,{...e,onChange:E,controls:!0,status:x,valueSelect:N,defaultValue:3})},s=e=>o.jsx(w,{className:"tw-w-[400px]",children:o.jsx(i,{...e,controls:!0,hugWidth:!0,placeholder:"Input has a width of `auto`"})});t.__docgenInfo={description:"",methods:[],displayName:"BaseUsage"};r.__docgenInfo={description:"",methods:[],displayName:"WithDecoratorAndIncrementable"};a.__docgenInfo={description:"",methods:[],displayName:"WithErrorLessThanZero"};s.__docgenInfo={description:"",methods:[],displayName:"WithHugWidth"};var m,u,c;t.parameters={...t.parameters,docs:{...(m=t.parameters)==null?void 0:m.docs,source:{originalSource:`args => {
  return <NumberInput {...args} placeholder="Enter a number..." />;
}`,...(c=(u=t.parameters)==null?void 0:u.docs)==null?void 0:c.source}}};var d,h,f;r.parameters={...r.parameters,docs:{...(d=r.parameters)==null?void 0:d.docs,source:{originalSource:`args => {
  return <NumberInput {...args} controls decorator={<IconNook16 />} />;
}`,...(f=(h=r.parameters)==null?void 0:h.docs)==null?void 0:f.source}}};var b,g,S;a.parameters={...a.parameters,docs:{...(b=a.parameters)==null?void 0:b.docs,source:{originalSource:`args => {
  const [status, setStatus] = useState<Validation>(Validation.Success);
  const [valueSelect, setValueSelect] = useState<boolean>(false);
  const handleValidation = (value: number = 0) => {
    setStatus(value < 0 ? Validation.Error : Validation.Success);
    setValueSelect(value < 0);
  };
  return <NumberInput {...args} onChange={handleValidation} controls status={status} valueSelect={valueSelect} defaultValue={3} />;
}`,...(S=(g=a.parameters)==null?void 0:g.docs)==null?void 0:S.source}}};var V,y,I;s.parameters={...s.parameters,docs:{...(V=s.parameters)==null?void 0:V.docs,source:{originalSource:`args => {
  return <Box className="tw-w-[400px]">
            <NumberInput {...args} controls hugWidth placeholder="Input has a width of \`auto\`" />
        </Box>;
}`,...(I=(y=s.parameters)==null?void 0:y.docs)==null?void 0:I.source}}};const Ge=["BaseUsage","WithDecoratorAndIncrementable","WithErrorLessThanZero","WithHugWidth"];export{t as BaseUsage,r as WithDecoratorAndIncrementable,a as WithErrorLessThanZero,s as WithHugWidth,Ge as __namedExportsOrder,Fe as default};
