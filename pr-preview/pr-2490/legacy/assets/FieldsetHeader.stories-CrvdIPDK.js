import{r as s,j as a}from"./iframe-8Aj-00-r.js";import{I as l}from"./IconIcon-CudZkNrs.js";import{F as p,a as r,b as m}from"./FieldsetHeader-DgfltOfM.js";import"./preload-helper-ClJkntjM.js";import"./IconSize-BcCrF_mi.js";import"./IconIcon16-F3fiPoyp.js";import"./IconIcon24-B8A3ssaY.js";import"./Switch-CG7Fwrxc.js";import"./useFocusRing-qG24ebph.js";import"./useEffectEvent-Cq9opHnK.js";import"./InputLabel-DPPpQodA.js";import"./TooltipIcon-Di_0n2EP.js";import"./LegacyTooltip-C9tle7yu.js";import"./useLink-BNAZ-U-L.js";import"./useFocusable-BwZ_9y-T.js";import"./chain-BjqAHd5L.js";import"./index-DCNbMVtB.js";import"./usePopper-CXS_WYpq.js";import"./index-Dnw8Dsyi.js";import"./Button-CG-0nyWt.js";import"./useButton-Dojg9qor.js";import"./focusStyle-Ch_WJ4aJ.js";import"./merge-DI-veSMP.js";import"./Portal-Bz1ny3RM.js";import"./useMemoizedId-CGc7h3BS.js";import"./IconCheckMark-W08NCNhP.js";import"./IconExclamationMarkCircle24-wOO7RqI2.js";import"./IconExclamationMarkTriangle-CTaWxLT5.js";import"./IconExclamationMarkTriangle24-DBim1kUj.js";import"./IconQuestionMarkCircle-DR6B91h_.js";import"./IconCaretDown-ByO_B0hy.js";import"./IconCaretDown16-l4VSPtYz.js";import"./IconMinus-C2kwkgj9.js";import"./IconMinus16-BXhj6kqf.js";import"./IconPlus-CZmRXoMn.js";import"./IconPlus16-DLla9cDc.js";const U={title:"Deprecated/Fieldset Header",component:m,tags:["autodocs"],argTypes:{size:{options:[r.Small,r.Medium,r.Large],control:{type:"radio"}},type:{options:Object.values(p),control:{type:"radio"}}},args:{size:r.Large,active:!0,type:p.Default,disabled:!1,bold:!0,children:"Heading",decorator:!0}},t=e=>{const[i,o]=s.useState(e.active);return s.useEffect(()=>{o(e.active)},[e.active]),a.jsx(m,{...e,decorator:e.decorator?a.jsx(l,{}):null,active:i,onClick:()=>o(!i)})};t.__docgenInfo={description:"",methods:[],displayName:"FieldsetHeader",props:{size:{required:!1,tsType:{name:"FieldsetHeaderSize"},description:""},active:{required:!1,tsType:{name:"boolean"},description:""},decorator:{required:!1,tsType:{name:"ReactNode"},description:""},type:{required:!1,tsType:{name:"FieldsetHeaderType"},description:""},disabled:{required:!1,tsType:{name:"boolean"},description:""},bold:{required:!1,tsType:{name:"boolean"},description:""},children:{required:!0,tsType:{name:"string"},description:""},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},as:{required:!1,tsType:{name:"JSX.IntrinsicElements"},description:""},tabIndex:{required:!1,tsType:{name:"number"},description:""},"data-test-id":{required:!1,tsType:{name:"string"},description:""}}};var d,n,c;t.parameters={...t.parameters,docs:{...(d=t.parameters)==null?void 0:d.docs,source:{originalSource:`(args: FieldsetHeaderProps) => {
  const [active, setActive] = useState(args.active);
  useEffect(() => {
    setActive(args.active);
  }, [args.active]);
  return <FieldsetHeaderComponent {...args} decorator={args.decorator ? <IconIcon /> : null} active={active} onClick={() => setActive(!active)} />;
}`,...(c=(n=t.parameters)==null?void 0:n.docs)==null?void 0:c.source}}};const V=["FieldsetHeader"];export{t as FieldsetHeader,V as __namedExportsOrder,U as default};
