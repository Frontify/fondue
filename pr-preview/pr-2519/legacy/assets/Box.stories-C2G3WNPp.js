import{j as g}from"./iframe-B0eONuky.js";import{B as b,a as i,S as v}from"./Box-Bx-HGFN9.js";import"./preload-helper-MprHWY6w.js";import"./borderStyle-D9jrV09G.js";import"./merge-DI-veSMP.js";import"./focusStyle-Ch_WJ4aJ.js";import"./input-CH-sbZx6.js";import"./Button-BlGIO2tE.js";import"./useButton-5FbdIYcR.js";import"./useFocusable-bBkjSLpf.js";import"./useFocusRing-DE6ZkWyf.js";import"./useEffectEvent-2_Uk2eyz.js";import"./chain-V8glzwK0.js";import"./index-DVbrmjAE.js";import"./IconSize-BcCrF_mi.js";import"./Divider-Ctv_3Wyq.js";import"./Dropdown-BfzPlYYt.js";import"./FocusScope-CyQyhzxw.js";import"./useOverlayTriggerState-lO9KGur7.js";import"./useControlledState-BVDDe9gl.js";import"./useMenuTrigger-DoHZFNAI.js";import"./useLabels-DLn4iTZj.js";import"./useLocalizedStringFormatter-D45KdaND.js";import"./context-BiMFL_PP.js";import"./VisuallyHidden-CpTHZVNZ.js";import"./helper-4xrQ1och.js";import"./keyboard-DpUZzzD5.js";import"./SelectionManager-DZOcDTAx.js";import"./useField-D1_sbYus.js";import"./useFormValidationState-CiR8hia_.js";import"./usePopper-CSmw89St.js";import"./index-Cq0fKC_P.js";import"./MenuItem-DOiZqrOT.js";import"./IconCaretRight-CVZt_dym.js";import"./IconCheckMark-Do5BaNJh.js";import"./elements-BOYmskOL.js";import"./LoadingCircle-CuP6zKKO.js";import"./Trigger-BkTp6a6g.js";import"./IconCaretDown-DGfG4Bhv.js";import"./IconCaretDown16-K9H94xLN.js";import"./IconCross-DKzK2egq.js";import"./IconExclamationMarkTriangle-E9iCfFGJ.js";import"./IconExclamationMarkTriangle24-BgvkgKew.js";import"./IconTrashBin16-B3PCevQV.js";import"./IconTrashBin24-j-bA0P1z.js";import"./validation-C9S5KgfE.js";import"./EnablePortalWrapper-CWbGt64c.js";import"./Portal-D_InDcfX.js";import"./useMemoizedId-B3YhzS_A.js";import"./FormControl-BHe39TIa.js";import"./InputLabel-ZriXx0s-.js";import"./TooltipIcon-iXKlKXAf.js";import"./LegacyTooltip-B7q53XOK.js";import"./useLink-B03_KRRE.js";import"./IconExclamationMarkCircle24-DhRVyq7-.js";import"./IconQuestionMarkCircle-R6W4K534.js";import"./Switch-OeDDwXU2.js";import"./TabItem-76GLqhix.js";import"./TextInput-Gv7lpT9-.js";import"./Tooltip-Dwst5rQ3.js";import"./useClickOutside-BBDKVLV6.js";import"./dialog-D9O7a7Fm.js";import"./Tree-D-Zdn97c.js";import"./_Uint8Array-CwPxMkg2.js";const t={options:Object.values(v),control:{type:"select"},defaultValue:""},Ct={title:"Layout/Box",component:i,tags:["autodocs"],argTypes:{className:{type:"string"},paddingX:t,paddingY:t,padding:t,marginX:t,marginY:t,margin:t,"data-test-id":{type:"string"},"aria-label":{type:"string"},as:{options:["div","span"],control:{type:"select"}},children:{table:{disable:!0}}},args:{className:"tw-font-bold tw-flex","data-test-id":b,children:"You can pass any props you want into this component. In the controls you can find examples with camelCased, aria and data attributes."},parameters:{status:{type:"deprecated"},docs:{description:{component:"### This component is deprecated, please use the [new Box layout component](/docs/current_layout-box--documentation) instead."}}}},p=h=>g.jsx(i,{...h}),e=p.bind({}),o=p.bind({});o.args={className:"tw-bg-box-positive hover:tw-bg-box-positive-hover tw-text-box-positive-inverse hover:tw-text-box-positive-inverse-hover"};const r=p.bind({});r.args={className:"tw-flex tw-bg-box-positive hover:tw-bg-box-positive-hover tw-text-box-positive-inverse hover:tw-text-box-positive-inverse-hover",children:g.jsx(i,{as:"span",children:"I am a Box component rendered as a span element inside another Box with display: flex."}),padding:16};var s,a,m;e.parameters={...e.parameters,docs:{...(s=e.parameters)==null?void 0:s.docs,source:{originalSource:`(args: Props) => {
  return <BoxComponent {...args} />;
}`,...(m=(a=e.parameters)==null?void 0:a.docs)==null?void 0:m.source}}};var n,c,d;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`(args: Props) => {
  return <BoxComponent {...args} />;
}`,...(d=(c=o.parameters)==null?void 0:c.docs)==null?void 0:d.source}}};var x,l,u;r.parameters={...r.parameters,docs:{...(x=r.parameters)==null?void 0:x.docs,source:{originalSource:`(args: Props) => {
  return <BoxComponent {...args} />;
}`,...(u=(l=r.parameters)==null?void 0:l.docs)==null?void 0:u.source}}};const Et=["Box","BoxWithAliasTokens","BoxWithNestedBoxAsSpan"];export{e as Box,o as BoxWithAliasTokens,r as BoxWithNestedBoxAsSpan,Et as __namedExportsOrder,Ct as default};
