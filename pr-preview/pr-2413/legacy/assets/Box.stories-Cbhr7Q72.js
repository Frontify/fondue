import{j as g}from"./iframe-DFnutv5M.js";import{B as b,a as i,S as v}from"./Box-CCVc1H_1.js";import"./preload-helper-DI9Pv0v-.js";import"./borderStyle-D9jrV09G.js";import"./merge-DI-veSMP.js";import"./focusStyle-Ch_WJ4aJ.js";import"./input-BZ4Yt3Vy.js";import"./Button-DvPoOfB7.js";import"./useButton-B9ck-Vwc.js";import"./useFocusable-C-JPn9OE.js";import"./useFocusRing-BZNNB2Hj.js";import"./useEffectEvent-DBbK-aqN.js";import"./chain-Dsa_W8ml.js";import"./index-a1h4e75G.js";import"./IconSize-BcCrF_mi.js";import"./DialogBody-Dv0qt-3k.js";import"./dialog-D9O7a7Fm.js";import"./Divider-BnEqrrOk.js";import"./Dropdown-DoUsbxMd.js";import"./FocusScope-CzNHlT6r.js";import"./useOverlayTriggerState-BU83XqOv.js";import"./useControlledState-CO8iWZC6.js";import"./useMenuTrigger-NR-AZ6fL.js";import"./useLabels-BgJwTBe8.js";import"./useLocalizedStringFormatter-CI2DTdCM.js";import"./context-CMCPGXhG.js";import"./VisuallyHidden-CP5cAKcA.js";import"./helper-CDma-XAN.js";import"./keyboard-B9Pv78ZV.js";import"./SelectionManager-CSpmgRXH.js";import"./useField-DIDYlmQE.js";import"./useFormValidationState-C58z87tk.js";import"./usePopper-mGKvFZOV.js";import"./index-BvzBMR0H.js";import"./MenuItem-CCE2SmwD.js";import"./IconCaretRight-Qf6FLOlU.js";import"./IconCheckMark-DIQLzXWs.js";import"./elements-BOYmskOL.js";import"./LoadingCircle-DdXCySpe.js";import"./Trigger-Bc1liQcc.js";import"./IconCaretDown-CntmYteF.js";import"./IconCaretDown16-DXJrcr77.js";import"./IconCross-DSLOUOUE.js";import"./IconExclamationMarkTriangle-Dk_iCro-.js";import"./IconExclamationMarkTriangle24-DXphiQNc.js";import"./IconTrashBin16-m420LrHr.js";import"./IconTrashBin24-DSRZEAzA.js";import"./validation-C9S5KgfE.js";import"./EnablePortalWrapper-B4vmv_6a.js";import"./Portal-r1TzMWAQ.js";import"./useMemoizedId-BId1lVLh.js";import"./FormControl-3LdqEtgD.js";import"./InputLabel-B_1U839I.js";import"./TooltipIcon-BRLLXESC.js";import"./LegacyTooltip-gb8qWYaE.js";import"./useLink-B28rYbuM.js";import"./IconExclamationMarkCircle24-Uarnc71I.js";import"./IconQuestionMarkCircle-DXpZoFVo.js";import"./Switch-DVVv0LyY.js";import"./TabItem-BVGGwMV_.js";import"./TextInput-BmJc5mOX.js";import"./Tooltip-Dfn4QrZ1.js";import"./useClickOutside-Cy27KqaZ.js";import"./Tree-7KbZYas7.js";import"./_Uint8Array-CwPxMkg2.js";const t={options:Object.values(v),control:{type:"select"},defaultValue:""},Et={title:"Layout/Box",component:i,tags:["autodocs"],argTypes:{className:{type:"string"},paddingX:t,paddingY:t,padding:t,marginX:t,marginY:t,margin:t,"data-test-id":{type:"string"},"aria-label":{type:"string"},as:{options:["div","span"],control:{type:"select"}},children:{table:{disable:!0}}},args:{className:"tw-font-bold tw-flex","data-test-id":b,children:"You can pass any props you want into this component. In the controls you can find examples with camelCased, aria and data attributes."},parameters:{status:{type:"deprecated"},docs:{description:{component:"### This component is deprecated, please use the [new Box layout component](/docs/current_layout-box--documentation) instead."}}}},p=h=>g.jsx(i,{...h}),e=p.bind({}),o=p.bind({});o.args={className:"tw-bg-box-positive hover:tw-bg-box-positive-hover tw-text-box-positive-inverse hover:tw-text-box-positive-inverse-hover"};const r=p.bind({});r.args={className:"tw-flex tw-bg-box-positive hover:tw-bg-box-positive-hover tw-text-box-positive-inverse hover:tw-text-box-positive-inverse-hover",children:g.jsx(i,{as:"span",children:"I am a Box component rendered as a span element inside another Box with display: flex."}),padding:16};var s,a,m;e.parameters={...e.parameters,docs:{...(s=e.parameters)==null?void 0:s.docs,source:{originalSource:`(args: Props) => {
  return <BoxComponent {...args} />;
}`,...(m=(a=e.parameters)==null?void 0:a.docs)==null?void 0:m.source}}};var n,c,d;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`(args: Props) => {
  return <BoxComponent {...args} />;
}`,...(d=(c=o.parameters)==null?void 0:c.docs)==null?void 0:d.source}}};var x,l,u;r.parameters={...r.parameters,docs:{...(x=r.parameters)==null?void 0:x.docs,source:{originalSource:`(args: Props) => {
  return <BoxComponent {...args} />;
}`,...(u=(l=r.parameters)==null?void 0:l.docs)==null?void 0:u.source}}};const It=["Box","BoxWithAliasTokens","BoxWithNestedBoxAsSpan"];export{e as Box,o as BoxWithAliasTokens,r as BoxWithNestedBoxAsSpan,It as __namedExportsOrder,Et as default};
