import{j as g}from"./iframe-CHTDhBOw.js";import{B as b,a as i,S as v}from"./Box-CBPJusEs.js";import"./preload-helper-DpV-BRze.js";import"./borderStyle-D9jrV09G.js";import"./merge-DI-veSMP.js";import"./focusStyle-Ch_WJ4aJ.js";import"./input-djRa9qHK.js";import"./Button-BGdoAku5.js";import"./useButton-DQwwQNDs.js";import"./useFocusable-wUQP4iRG.js";import"./useFocusRing-B9ljnzvU.js";import"./useEffectEvent-C_zZUYtw.js";import"./chain-gGRwirEw.js";import"./index-NZpU9fsB.js";import"./IconSize-BcCrF_mi.js";import"./Divider-CIYdp59O.js";import"./Dropdown-jHV7NTSi.js";import"./FocusScope-CbrJ0X92.js";import"./useOverlayTriggerState-ChnurNZW.js";import"./useControlledState-Dyp77OM5.js";import"./useMenuTrigger-grTO5Qe1.js";import"./useLabels-IJBk5yiI.js";import"./useLocalizedStringFormatter-BQCdTs0l.js";import"./context-BiY5BK-o.js";import"./VisuallyHidden-BCHw-yIg.js";import"./helper-B9AmTkD4.js";import"./keyboard-Db7mZRua.js";import"./SelectionManager-CfehHhqG.js";import"./useField-yVlFEyW7.js";import"./useFormValidationState-B2zh8KVN.js";import"./usePopper-C5FqElHn.js";import"./index-B1BGL-gG.js";import"./MenuItem-Uj9s8-V9.js";import"./IconCaretRight-B_wMabco.js";import"./IconCheckMark-CQY-3-zS.js";import"./elements-BOYmskOL.js";import"./LoadingCircle-CH8flQ6d.js";import"./Trigger-Bl0mFWY9.js";import"./IconCaretDown-B2SIJpLO.js";import"./IconCaretDown16-Cz4JQCqT.js";import"./IconCross-DWeuQ1JS.js";import"./IconExclamationMarkTriangle-mlvDeGrH.js";import"./IconExclamationMarkTriangle24-C2n0SPiZ.js";import"./IconTrashBin16-P9BnFBNa.js";import"./IconTrashBin24-BtqjXLr0.js";import"./validation-C9S5KgfE.js";import"./EnablePortalWrapper-BLiyXpiv.js";import"./Portal-nIPd8MLx.js";import"./useMemoizedId-BEUTTPGp.js";import"./FormControl-BzDjNNoV.js";import"./InputLabel-QcPAW579.js";import"./TooltipIcon-D1bgs6mY.js";import"./LegacyTooltip-uEHKcS05.js";import"./useLink-C1eg4OUw.js";import"./IconExclamationMarkCircle24-DIy9V4jm.js";import"./IconQuestionMarkCircle-DSmq-Pjo.js";import"./Switch-Bn7c7Gvc.js";import"./TabItem-BUF1jYrI.js";import"./TextInput-CWHjYK3t.js";import"./Tooltip-izQuXX3x.js";import"./useClickOutside-TKpqzDgM.js";import"./dialog-D9O7a7Fm.js";import"./Tree-CQXnKAKI.js";import"./_Uint8Array-CwPxMkg2.js";const t={options:Object.values(v),control:{type:"select"},defaultValue:""},Ct={title:"Layout/Box",component:i,tags:["autodocs"],argTypes:{className:{type:"string"},paddingX:t,paddingY:t,padding:t,marginX:t,marginY:t,margin:t,"data-test-id":{type:"string"},"aria-label":{type:"string"},as:{options:["div","span"],control:{type:"select"}},children:{table:{disable:!0}}},args:{className:"tw-font-bold tw-flex","data-test-id":b,children:"You can pass any props you want into this component. In the controls you can find examples with camelCased, aria and data attributes."},parameters:{status:{type:"deprecated"},docs:{description:{component:"### This component is deprecated, please use the [new Box layout component](/docs/current_layout-box--documentation) instead."}}}},p=h=>g.jsx(i,{...h}),e=p.bind({}),o=p.bind({});o.args={className:"tw-bg-box-positive hover:tw-bg-box-positive-hover tw-text-box-positive-inverse hover:tw-text-box-positive-inverse-hover"};const r=p.bind({});r.args={className:"tw-flex tw-bg-box-positive hover:tw-bg-box-positive-hover tw-text-box-positive-inverse hover:tw-text-box-positive-inverse-hover",children:g.jsx(i,{as:"span",children:"I am a Box component rendered as a span element inside another Box with display: flex."}),padding:16};var s,a,m;e.parameters={...e.parameters,docs:{...(s=e.parameters)==null?void 0:s.docs,source:{originalSource:`(args: Props) => {
  return <BoxComponent {...args} />;
}`,...(m=(a=e.parameters)==null?void 0:a.docs)==null?void 0:m.source}}};var n,c,d;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`(args: Props) => {
  return <BoxComponent {...args} />;
}`,...(d=(c=o.parameters)==null?void 0:c.docs)==null?void 0:d.source}}};var x,l,u;r.parameters={...r.parameters,docs:{...(x=r.parameters)==null?void 0:x.docs,source:{originalSource:`(args: Props) => {
  return <BoxComponent {...args} />;
}`,...(u=(l=r.parameters)==null?void 0:l.docs)==null?void 0:u.source}}};const Et=["Box","BoxWithAliasTokens","BoxWithNestedBoxAsSpan"];export{e as Box,o as BoxWithAliasTokens,r as BoxWithNestedBoxAsSpan,Et as __namedExportsOrder,Ct as default};
