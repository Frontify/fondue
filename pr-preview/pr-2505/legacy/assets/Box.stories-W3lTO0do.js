import{j as g}from"./iframe-DvE_Cfbx.js";import{B as b,a as i,S as v}from"./Box-Dp80e-XP.js";import"./preload-helper-DpV-BRze.js";import"./borderStyle-D9jrV09G.js";import"./merge-DI-veSMP.js";import"./focusStyle-Ch_WJ4aJ.js";import"./input-BbtE7GOK.js";import"./Button-D4w0aNJF.js";import"./useButton-Cnlh5iFm.js";import"./useFocusable-YbUi6w36.js";import"./useFocusRing-DzW8Z_47.js";import"./useEffectEvent-BtTn6BuB.js";import"./chain-EXX0zfKx.js";import"./index-C1x3BvL1.js";import"./IconSize-BcCrF_mi.js";import"./Divider-BWXyH0fd.js";import"./Dropdown-BcR6SuzD.js";import"./FocusScope-CICA33ZM.js";import"./useOverlayTriggerState-VX9MWZa-.js";import"./useControlledState-B4RRmpoX.js";import"./useMenuTrigger-B0K6261F.js";import"./useLabels-B4qGKxij.js";import"./useLocalizedStringFormatter-uH6M_LlD.js";import"./context-CjYtJ2Dh.js";import"./VisuallyHidden-CH37k1zR.js";import"./helper-hQLxgAVw.js";import"./keyboard-Do92NHuN.js";import"./SelectionManager-DmiDq3y6.js";import"./useField-D1PK1BbW.js";import"./useFormValidationState-DTcHrzlU.js";import"./usePopper-0GpztLz0.js";import"./index-CgHmLPyd.js";import"./MenuItem-DjyGJryO.js";import"./IconCaretRight-DG2OLDac.js";import"./IconCheckMark-BnWU-4-4.js";import"./elements-BOYmskOL.js";import"./LoadingCircle-B7EbVwIE.js";import"./Trigger-WSkRExH6.js";import"./IconCaretDown-BLKtQPMT.js";import"./IconCaretDown16-tjMVBqmZ.js";import"./IconCross-ILvZHpzK.js";import"./IconExclamationMarkTriangle-CtL4mprZ.js";import"./IconExclamationMarkTriangle24-BeKRmNeI.js";import"./IconTrashBin16-Ye7gwNbF.js";import"./IconTrashBin24-D62Bq0Kp.js";import"./validation-C9S5KgfE.js";import"./EnablePortalWrapper-VFf8OAPW.js";import"./Portal-DXJII2sF.js";import"./useMemoizedId-DamS-zza.js";import"./FormControl-DQTGT8Qd.js";import"./InputLabel-CPiknDaM.js";import"./TooltipIcon-BgeNhtJq.js";import"./LegacyTooltip-HylOrONJ.js";import"./useLink-DFHjCfB3.js";import"./IconExclamationMarkCircle24-DG3gLjOd.js";import"./IconQuestionMarkCircle-DyvTHndi.js";import"./Switch-D0uhFjX4.js";import"./TabItem-lY2wl6EQ.js";import"./TextInput-JeIEGuUe.js";import"./Tooltip-CI2uwgUy.js";import"./useClickOutside-BRVMQ9di.js";import"./dialog-D9O7a7Fm.js";import"./Tree-CNHT-QdV.js";import"./_Uint8Array-CwPxMkg2.js";const t={options:Object.values(v),control:{type:"select"},defaultValue:""},Ct={title:"Layout/Box",component:i,tags:["autodocs"],argTypes:{className:{type:"string"},paddingX:t,paddingY:t,padding:t,marginX:t,marginY:t,margin:t,"data-test-id":{type:"string"},"aria-label":{type:"string"},as:{options:["div","span"],control:{type:"select"}},children:{table:{disable:!0}}},args:{className:"tw-font-bold tw-flex","data-test-id":b,children:"You can pass any props you want into this component. In the controls you can find examples with camelCased, aria and data attributes."},parameters:{status:{type:"deprecated"},docs:{description:{component:"### This component is deprecated, please use the [new Box layout component](/docs/current_layout-box--documentation) instead."}}}},p=h=>g.jsx(i,{...h}),e=p.bind({}),o=p.bind({});o.args={className:"tw-bg-box-positive hover:tw-bg-box-positive-hover tw-text-box-positive-inverse hover:tw-text-box-positive-inverse-hover"};const r=p.bind({});r.args={className:"tw-flex tw-bg-box-positive hover:tw-bg-box-positive-hover tw-text-box-positive-inverse hover:tw-text-box-positive-inverse-hover",children:g.jsx(i,{as:"span",children:"I am a Box component rendered as a span element inside another Box with display: flex."}),padding:16};var s,a,m;e.parameters={...e.parameters,docs:{...(s=e.parameters)==null?void 0:s.docs,source:{originalSource:`(args: Props) => {
  return <BoxComponent {...args} />;
}`,...(m=(a=e.parameters)==null?void 0:a.docs)==null?void 0:m.source}}};var n,c,d;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`(args: Props) => {
  return <BoxComponent {...args} />;
}`,...(d=(c=o.parameters)==null?void 0:c.docs)==null?void 0:d.source}}};var x,l,u;r.parameters={...r.parameters,docs:{...(x=r.parameters)==null?void 0:x.docs,source:{originalSource:`(args: Props) => {
  return <BoxComponent {...args} />;
}`,...(u=(l=r.parameters)==null?void 0:l.docs)==null?void 0:u.source}}};const Et=["Box","BoxWithAliasTokens","BoxWithNestedBoxAsSpan"];export{e as Box,o as BoxWithAliasTokens,r as BoxWithNestedBoxAsSpan,Et as __namedExportsOrder,Ct as default};
