import{j as y}from"./jsx-runtime-BYYWji4R.js";import{r as p}from"./index-ClcD9ViR.js";import{E as S}from"./example-palettes-kTA_La-h.js";import{C as n}from"./ColorPickerFlyout-C7IzrNmB.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./SegmentedControls-B5csYJNv.js";import"./useFocusRing-CqhiwHAH.js";import"./useEffectEvent-23OTMzEQ.js";import"./useFocusable-NpJIjJzn.js";import"./chain-zZtnTS2i.js";import"./index-Cho7bklK.js";import"./useFormValidationState-CY2oi0R5.js";import"./FocusScope-BbG7qqtO.js";import"./useField-DK1vwUqC.js";import"./useLabels-B-KZ60t7.js";import"./context-dZDq9eSh.js";import"./VisuallyHidden-BJ4JcGHV.js";import"./useControlledState-CbyHarIm.js";import"./useMemoizedId-BicaxHcO.js";import"./generateRandomId-Dxm0_E-2.js";import"./focusStyle-BtNTXUM4.js";import"./merge-DI-veSMP.js";import"./motion-DqKuqH19.js";import"./colors-cqDZVL9s.js";import"./TextInput-DRg0u3Q6.js";import"./LoadingCircle-N4gckcbl.js";import"./IconCheckMark-CqkZOEh6.js";import"./IconSize-BcCrF_mi.js";import"./IconCheckMark16-BSi_kkf1.js";import"./IconClipboard16-CPE6JlPb.js";import"./IconCross-U1qlrHTt.js";import"./IconCross16-BshCNAKj.js";import"./IconExclamationMarkTriangle-DebOIQd7.js";import"./IconExclamationMarkTriangle16-DGaIrm4W.js";import"./IconExclamationMarkTriangle24-BCoex7hw.js";import"./IconEyeOff16-C861zzFg.js";import"./validation-CJXPAjNB.js";import"./LegacyTooltip-BMTu7B_J.js";import"./useLink-DLd-zCvm.js";import"./usePopper-BHXQC2xD.js";import"./index-DlnOb27V.js";import"./Button-BkcxChke.js";import"./useButton-CmN_Qqm3.js";import"./Portal-B3A1C5qZ.js";import"./IconDocument-BT3LAKWU.js";import"./IconExclamationMarkCircle24-4UiwpX0o.js";import"./IconMagnifier-r2kj5vef.js";import"./IconMagnifier16-Axw5V6CX.js";import"./Dropdown-ClcIm72c.js";import"./useOverlayTriggerState-Do1lhetf.js";import"./useMenuTrigger-WEg3SWYq.js";import"./useLocalizedStringFormatter-DuHRzRSj.js";import"./helper-kX8HYG1i.js";import"./isScrollable-BSEN4xi5.js";import"./SelectionManager-C5uJtM9S.js";import"./MenuItem-COoDNpel.js";import"./IconCaretRight-CAeLeSzU.js";import"./elements-BOYmskOL.js";import"./Trigger-75KGYZM1.js";import"./IconCaretDown-BLgqrlDL.js";import"./IconCaretDown16-Df8Xsbqc.js";import"./IconTrashBin16-DOiZQ5Am.js";import"./IconTrashBin24-10Yg3nt7.js";import"./useDropdownAutoHeight-D5oOQk5u.js";import"./EnablePortalWrapper-CTxa5i7Z.js";import"./Flyout-bdElvTko.js";import"./getVerticalPositioning-CXY_GBne.js";import"./useDialog-DNMX-qOU.js";import"./Badge-D3iHhUFC.js";import"./FieldsetHeader-Cmz83deY.js";import"./Switch-B1eeU859.js";import"./InputLabel-CwZoIbN1.js";import"./TooltipIcon-0QxfgwfT.js";import"./IconQuestionMarkCircle-7EPrDyIp.js";import"./IconMinus-DVuqM0Be.js";import"./IconMinus16-C5LwBrlK.js";import"./IconPlus-CTHqG6wY.js";import"./IconPlus16-UshTJ08A.js";const Bo={title:"Components/Color Picker/Flyout",component:n,tags:["autodocs"],args:{disabled:!1,currentColor:null,clearable:!1},argTypes:{onDelete:{action:"onDelete"}},parameters:{status:{type:"deprecated"},docs:{description:{component:"### This component is deprecated, please use the `Flyout` together with the [new Color Picker component](/docs/current_components-colorpicker--documentation) instead."}}}},o=({disabled:s,currentColor:a,clearable:c,onDelete:u})=>{const[t,r]=p.useState(null),[C,e]=p.useState(a);return y.jsx(n,{disabled:s,clearable:c,currentColor:t??C,onClick:()=>e(t),onClose:()=>r(null),onSelect:d=>r(d),palettes:S,onClear:()=>{r(null),e(null)},onDelete:u})};o.__docgenInfo={description:"",methods:[],displayName:"Flyout"};var m,i,l;o.parameters={...o.parameters,docs:{...(m=o.parameters)==null?void 0:m.docs,source:{originalSource:`({
  disabled,
  currentColor,
  clearable,
  onDelete
}) => {
  const [temporaryColor, setTemporaryColor] = useState<Color | null>(null);
  const [selectedColor, setSelectedColor] = useState<Color | null>(currentColor);
  return <ColorPickerFlyoutComponent disabled={disabled} clearable={clearable} currentColor={temporaryColor ?? selectedColor} onClick={() => setSelectedColor(temporaryColor)} onClose={() => setTemporaryColor(null)} onSelect={color => setTemporaryColor(color)} palettes={EXAMPLE_PALETTES} onClear={() => {
    setTemporaryColor(null);
    setSelectedColor(null);
  }} onDelete={onDelete} />;
}`,...(l=(i=o.parameters)==null?void 0:i.docs)==null?void 0:l.source}}};const Go=["Flyout"];export{o as Flyout,Go as __namedExportsOrder,Bo as default};
