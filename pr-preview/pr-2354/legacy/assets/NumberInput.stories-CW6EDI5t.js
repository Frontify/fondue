import{j as a}from"./jsx-runtime-BYYWji4R.js";import{r as i}from"./index-ClcD9ViR.js";import{I as _}from"./IconNook16-DvHvpLJB.js";import{V as n}from"./validation-CJXPAjNB.js";import{a as w}from"./Box-BbIDEstp.js";import{N as l}from"./NumberInput-BnhpTpa2.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./borderStyle-D9jrV09G.js";import"./merge-DI-veSMP.js";import"./focusStyle-BtNTXUM4.js";import"./input-Bbe4DJvU.js";import"./Button-BkcxChke.js";import"./useButton-CmN_Qqm3.js";import"./useFocusable-NpJIjJzn.js";import"./useFocusRing-CqhiwHAH.js";import"./useEffectEvent-23OTMzEQ.js";import"./chain-zZtnTS2i.js";import"./index-Cho7bklK.js";import"./IconSize-BcCrF_mi.js";import"./LoadingCircle-N4gckcbl.js";import"./IconCheckMark16-BSi_kkf1.js";import"./IconCross16-BshCNAKj.js";import"./IconExclamationMarkTriangle16-DGaIrm4W.js";import"./IconEyeOff16-C861zzFg.js";import"./generateRandomId-Dxm0_E-2.js";import"./IconMinus16-C5LwBrlK.js";import"./IconPlus16-UshTJ08A.js";import"./useMemoizedId-BicaxHcO.js";const oe={title:"Components/Number Input",component:l,tags:["autodocs"],args:{clearable:!1},argTypes:{decorator:{description:"Add decorator element to start of the input",name:"decorator",defaultValue:void 0},suffix:{description:"String to append to the input value.",name:"suffix",defaultValue:void 0,control:{type:"text"}},disabled:{type:"boolean",table:{type:{summary:"boolean | undefined"},defaultValue:{summary:!1}}},readOnly:{type:"boolean",table:{type:{summary:"boolean | undefined"},defaultValue:{summary:!1}}},controls:{description:"Enable increment buttons",name:"controls",defaultValue:!1,control:{type:"boolean"}},clearable:{description:"Enable clear button",name:"clearable",defaultValue:!1,control:{type:"boolean"}},hugWidth:{description:"If `true` element will have a `auto` width, else `full` width",defaultValue:!1,control:{type:"boolean"}},status:{description:"Set the current status of the input",name:"status",options:Object.values(n),control:{type:"select"},defaultValue:n.Default},stepInterval:{description:"Set the incremental value",name:"stepInterval",defaultValue:10,control:{type:"number"}},valueSelect:{description:"Highlight current input value.",name:"valueSelect",defaultValue:!1,control:{type:"boolean"}},onChange:{description:"onChange callback",name:"onChange",defaultValue:void 0,action:"onChange"},"data-test-id":{table:{disable:!0}}},parameters:{status:{type:"deprecated"},docs:{description:{component:'### This component is deprecated, please use the [new Text Input component](/docs/current_components-text-input--documentation) with `type="number"` instead.'}}}},t=e=>a.jsx(l,{...e,placeholder:"Enter a number..."});t.args={clearable:!0};const o=e=>a.jsx(l,{...e,controls:!0,decorator:a.jsx(_,{})}),r=e=>{const[x,v]=i.useState(n.Success),[N,W]=i.useState(!1),E=(u=0)=>{v(u<0?n.Error:n.Success),W(u<0)};return a.jsx(l,{...e,onChange:E,controls:!0,status:x,valueSelect:N,defaultValue:3})},s=e=>a.jsx(w,{className:"tw-w-[400px]",children:a.jsx(l,{...e,controls:!0,hugWidth:!0,placeholder:"Input has a width of `auto`"})});t.__docgenInfo={description:"",methods:[],displayName:"BaseUsage"};o.__docgenInfo={description:"",methods:[],displayName:"WithDecoratorAndIncrementable"};r.__docgenInfo={description:"",methods:[],displayName:"WithErrorLessThanZero"};s.__docgenInfo={description:"",methods:[],displayName:"WithHugWidth"};var c,p,d;t.parameters={...t.parameters,docs:{...(c=t.parameters)==null?void 0:c.docs,source:{originalSource:`args => {
  return <NumberInput {...args} placeholder="Enter a number..." />;
}`,...(d=(p=t.parameters)==null?void 0:p.docs)==null?void 0:d.source}}};var m,h,f;o.parameters={...o.parameters,docs:{...(m=o.parameters)==null?void 0:m.docs,source:{originalSource:`args => {
  return <NumberInput {...args} controls decorator={<IconNook16 />} />;
}`,...(f=(h=o.parameters)==null?void 0:h.docs)==null?void 0:f.source}}};var b,g,S;r.parameters={...r.parameters,docs:{...(b=r.parameters)==null?void 0:b.docs,source:{originalSource:`args => {
  const [status, setStatus] = useState<Validation>(Validation.Success);
  const [valueSelect, setValueSelect] = useState<boolean>(false);
  const handleValidation = (value: number = 0) => {
    setStatus(value < 0 ? Validation.Error : Validation.Success);
    setValueSelect(value < 0);
  };
  return <NumberInput {...args} onChange={handleValidation} controls status={status} valueSelect={valueSelect} defaultValue={3} />;
}`,...(S=(g=r.parameters)==null?void 0:g.docs)==null?void 0:S.source}}};var V,y,I;s.parameters={...s.parameters,docs:{...(V=s.parameters)==null?void 0:V.docs,source:{originalSource:`args => {
  return <Box className="tw-w-[400px]">
            <NumberInput {...args} controls hugWidth placeholder="Input has a width of \`auto\`" />
        </Box>;
}`,...(I=(y=s.parameters)==null?void 0:y.docs)==null?void 0:I.source}}};const re=["BaseUsage","WithDecoratorAndIncrementable","WithErrorLessThanZero","WithHugWidth"];export{t as BaseUsage,o as WithDecoratorAndIncrementable,r as WithErrorLessThanZero,s as WithHugWidth,re as __namedExportsOrder,oe as default};
