import{j as e}from"./jsx-runtime-BYYWji4R.js";import{a as R}from"./index-B-lxVbXh.js";import{V as c,a as q}from"./validation-CJXPAjNB.js";import{$ as z}from"./useFocusRing-CqhiwHAH.js";import{r as p}from"./index-ClcD9ViR.js";import{c as b,a as x,b as h,B as g}from"./Button-BkcxChke.js";import{I as G}from"./IconCross16-BshCNAKj.js";import{I as M,a as A}from"./IconEyeOff16-C861zzFg.js";import{u as U}from"./useMemoizedId-BicaxHcO.js";import{F as W}from"./focusStyle-BtNTXUM4.js";import{G as L}from"./input-Bbe4DJvU.js";import{m as k}from"./merge-DI-veSMP.js";import"./v4-CtRu48qb.js";import"./useEffectEvent-23OTMzEQ.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./useButton-CmN_Qqm3.js";import"./useFocusable-NpJIjJzn.js";import"./chain-zZtnTS2i.js";import"./index-Cho7bklK.js";import"./IconSize-BcCrF_mi.js";import"./generateRandomId-Dxm0_E-2.js";import"./LoadingCircle-N4gckcbl.js";import"./IconCheckMark16-BSi_kkf1.js";import"./IconExclamationMarkTriangle16-DGaIrm4W.js";const y={Text:"text",Password:"password"},d=({autocomplete:u=!1,clearable:j,disabled:o,id:C,obfuscated:P=!0,placeholder:E,readOnly:f,required:S,status:n=c.Default,size:m,value:T,onChange:l,onFocus:F,onBlur:$,onKeyDown:D,"data-test-id":a="fondue-password-input"})=>{const t=p.useRef(null),[i,_]=p.useState(P),{isFocusVisible:N,focusProps:O}=z({isTextInput:!0}),w=p.useCallback(()=>{var r;l==null||l((r=t.current)==null?void 0:r.value)},[t,l]),B=()=>{t.current&&(t.current.value="",w())};return e.jsxs("div",{className:k(["tw-flex tw-items-center tw-justify-between tw-h-9 tw-gap-2 tw-px-3 tw-py-3 tw-transition tw-text-s tw-font-sans tw-relative tw-border tw-rounded",m?"":"tw-w-full",o?"tw-bg-box-disabled dark:tw-bg-box-disabled hover:tw-cursor-not-allowed tw-border-line-weak dark:tw-border-line-weak":"tw-bg-base dark:tw-bg-base tw-border-line-strong dark:tw-border-line-strong hover:tw-border-line-x-strong dark:hover:tw-border-line-x-strong focus-within:tw-border-line-xx-strong dark:focus-within:tw-border-line-xx-strong focus-within:hover:tw-border-line-xx-strong dark:focus-within:hover:tw-border-line-xx-strong",N&&W,n?q[n]:""]),"data-test-id":a,children:[e.jsx("input",{size:m,value:T,onBlur:$,onFocus:F,disabled:o,readOnly:f,required:S,ref:t,onKeyDown:D,onChange:w,placeholder:E,id:U(C),"aria-label":"Password Input",autoComplete:u?"on":"off",onClick:()=>{var r;return(r=t.current)==null?void 0:r.focus()},type:i?y.Password:y.Text,className:k(["tw-w-full tw-border-none tw-outline-none tw-bg-transparent tw-hide-input-arrows tw-text-sm",o||f?"tw-text-text-disabled tw-placeholder-text-disabled dark:tw-text-black-30 dark:tw-placeholder-black-40 hover:tw-cursor-not-allowed":"tw-text-text dark:tw-text-weak tw-placeholder-text-x-weak dark:tw-placeholder-text-x-weak "]),"data-test-id":`${a}-input`,...O}),e.jsxs("span",{className:"tw-flex tw-justify-between tw-items-center t-max-w-sm",children:[e.jsx(b,{disabled:o,size:g.Small,style:h.Default,emphasis:x.Weak,onClick:()=>_(!i),"aria-label":`${i?"show":"hide"} text input`,icon:i?e.jsx(M,{}):e.jsx(A,{}),"data-test-id":`${a}-visibility-icon`}),j?e.jsx(b,{disabled:o,onClick:B,icon:e.jsx(G,{}),size:g.Small,"aria-label":"Clear value",style:h.Default,emphasis:x.Weak,"data-test-id":`${a}-clear`}):null,n?L(n,a):null]})]})};d.displayName="FonduePasswordInput";d.__docgenInfo={description:'@deprecated Use `TextInput` from `@frontify/fondue/components` with `type="password"` instead. Also check {@link https://github.com/Frontify/fondue/blob/main/packages/components/MIGRATING.md#text-input the migration guide}.',methods:[],displayName:"FonduePasswordInput",props:{obfuscated:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"true",computed:!1}},autocomplete:{defaultValue:{value:"false",computed:!1},required:!1},status:{defaultValue:{value:"Validation.Default",computed:!0},required:!1},"data-test-id":{defaultValue:{value:"'fondue-password-input'",computed:!1},required:!1}}};const he={title:"Components/Password Input",component:d,tags:["autodocs"],argTypes:{autocomplete:{control:{type:"boolean"},defaultValue:!1},disabled:{control:{type:"boolean"},description:"Flag to disable input",defaultValue:!1},clearable:{control:{type:"boolean"},description:"Render clear button at the end of the input to allow for clearing of the value.",defaultValue:!1},obfuscated:{control:{type:"boolean"},description:"Flag to show or obfuscate input value on initial render.",defaultValue:!0},placeholder:{control:{type:"text"},description:"Text for placeholder",defaultValue:void 0},status:{control:{type:"select"},options:Object.values(c),defaultValue:c.Default},id:{table:{disable:!0}},size:{table:{disable:!0}},onChange:{description:"onChange callback",action:"onchange",defaultValue:void 0},"data-test-id":{table:{disable:!0}}},parameters:{status:{type:"deprecated"},docs:{description:{component:'### This component is deprecated, please use the [new Text Input component](/docs/current_components-text-input--documentation) with `type="password"` instead.'}}},args:{}},Y=u=>e.jsx(d,{...u,onChange:R("onchange")}),s=Y.bind({});s.args={placeholder:"Enter password"};var v,I,V;s.parameters={...s.parameters,docs:{...(v=s.parameters)==null?void 0:v.docs,source:{originalSource:`args => {
  return <PasswordInput {...args} onChange={action('onchange')} />;
}`,...(V=(I=s.parameters)==null?void 0:I.docs)==null?void 0:V.source}}};const ge=["Default"];export{s as Default,ge as __namedExportsOrder,he as default};
