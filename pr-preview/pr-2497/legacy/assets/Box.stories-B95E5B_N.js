import{j as g}from"./iframe-BqDpTz8L.js";import{B as b,a as i,S as v}from"./Box-yDJFD71A.js";import"./preload-helper-ByQXrLpA.js";import"./borderStyle-D9jrV09G.js";import"./merge-DI-veSMP.js";import"./focusStyle-Ch_WJ4aJ.js";import"./input-CTkk_4sX.js";import"./Button-Bkb2ujAG.js";import"./useButton-BGLu1zCr.js";import"./useFocusable-C1aQJPOg.js";import"./useFocusRing-Xgnq7-RG.js";import"./useEffectEvent-CfjbAp9f.js";import"./chain-BF0-ro9P.js";import"./index-D7I4QJ3V.js";import"./IconSize-BcCrF_mi.js";import"./Divider-BDkhKOpT.js";import"./Dropdown-DIeWOy5O.js";import"./FocusScope-CrwMUh0H.js";import"./useOverlayTriggerState-Dxar4kSR.js";import"./useControlledState-DRzZhX7e.js";import"./useMenuTrigger-B-xTmkst.js";import"./useLabels-CShK178M.js";import"./useLocalizedStringFormatter-CT_IKlGg.js";import"./context-Cuf97275.js";import"./VisuallyHidden-Z6NBypG9.js";import"./helper-CawoOU1g.js";import"./keyboard-D68Nodq9.js";import"./SelectionManager-ClMwx0j_.js";import"./useField-BAnoDg69.js";import"./useFormValidationState-BoxxuQfu.js";import"./usePopper-s4jp2qgP.js";import"./index-CY-jsk3T.js";import"./MenuItem-PZQtIurR.js";import"./IconCaretRight-PlITsN3f.js";import"./IconCheckMark-BbPCPrTa.js";import"./elements-BOYmskOL.js";import"./LoadingCircle-BxttBEHu.js";import"./Trigger-DSSj9pCU.js";import"./IconCaretDown-R6whlyjw.js";import"./IconCaretDown16-Bdm0zhQl.js";import"./IconCross-B8K-nVuA.js";import"./IconExclamationMarkTriangle-DRWrILNB.js";import"./IconExclamationMarkTriangle24-XYss3Qca.js";import"./IconTrashBin16-DR0ZRfF3.js";import"./IconTrashBin24-CciGS0Cs.js";import"./validation-C9S5KgfE.js";import"./EnablePortalWrapper-Dvj5TfsF.js";import"./Portal-B7rzZNWn.js";import"./useMemoizedId-Dw0wROnJ.js";import"./FormControl-DcBQh53j.js";import"./InputLabel-CF4ejW5R.js";import"./TooltipIcon-Dg_9MSCk.js";import"./LegacyTooltip-h-bi0B10.js";import"./useLink-_NQoLbRX.js";import"./IconExclamationMarkCircle24-BixhjAUI.js";import"./IconQuestionMarkCircle-gMiBNDjP.js";import"./Switch-DHEC4TsF.js";import"./TabItem-3JcYdrD1.js";import"./TextInput-CRHj7Htq.js";import"./Tooltip-CMa0Vima.js";import"./useClickOutside-BZvZNjns.js";import"./dialog-D9O7a7Fm.js";import"./Tree-4CeaLJ8E.js";import"./_Uint8Array-CwPxMkg2.js";const t={options:Object.values(v),control:{type:"select"},defaultValue:""},Ct={title:"Layout/Box",component:i,tags:["autodocs"],argTypes:{className:{type:"string"},paddingX:t,paddingY:t,padding:t,marginX:t,marginY:t,margin:t,"data-test-id":{type:"string"},"aria-label":{type:"string"},as:{options:["div","span"],control:{type:"select"}},children:{table:{disable:!0}}},args:{className:"tw-font-bold tw-flex","data-test-id":b,children:"You can pass any props you want into this component. In the controls you can find examples with camelCased, aria and data attributes."},parameters:{status:{type:"deprecated"},docs:{description:{component:"### This component is deprecated, please use the [new Box layout component](/docs/current_layout-box--documentation) instead."}}}},p=h=>g.jsx(i,{...h}),e=p.bind({}),o=p.bind({});o.args={className:"tw-bg-box-positive hover:tw-bg-box-positive-hover tw-text-box-positive-inverse hover:tw-text-box-positive-inverse-hover"};const r=p.bind({});r.args={className:"tw-flex tw-bg-box-positive hover:tw-bg-box-positive-hover tw-text-box-positive-inverse hover:tw-text-box-positive-inverse-hover",children:g.jsx(i,{as:"span",children:"I am a Box component rendered as a span element inside another Box with display: flex."}),padding:16};var s,a,m;e.parameters={...e.parameters,docs:{...(s=e.parameters)==null?void 0:s.docs,source:{originalSource:`(args: Props) => {
  return <BoxComponent {...args} />;
}`,...(m=(a=e.parameters)==null?void 0:a.docs)==null?void 0:m.source}}};var n,c,d;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`(args: Props) => {
  return <BoxComponent {...args} />;
}`,...(d=(c=o.parameters)==null?void 0:c.docs)==null?void 0:d.source}}};var x,l,u;r.parameters={...r.parameters,docs:{...(x=r.parameters)==null?void 0:x.docs,source:{originalSource:`(args: Props) => {
  return <BoxComponent {...args} />;
}`,...(u=(l=r.parameters)==null?void 0:l.docs)==null?void 0:u.source}}};const Et=["Box","BoxWithAliasTokens","BoxWithNestedBoxAsSpan"];export{e as Box,o as BoxWithAliasTokens,r as BoxWithNestedBoxAsSpan,Et as __namedExportsOrder,Ct as default};
