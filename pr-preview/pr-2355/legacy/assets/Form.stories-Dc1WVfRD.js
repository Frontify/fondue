import{j as r}from"./jsx-runtime-BYYWji4R.js";import{a as d}from"./index-B-lxVbXh.js";import{B as n}from"./Box-BwC6P0Io.js";import{B as c}from"./Button-DyWS8jND.js";import{F as u}from"./FormControl-BY3111Wc.js";import{T as f}from"./TextInput-BNksXhPM.js";import{r as x}from"./index-ClcD9ViR.js";import"./v4-CtRu48qb.js";import"./borderStyle-D9jrV09G.js";import"./merge-DI-veSMP.js";import"./focusStyle-BtNTXUM4.js";import"./input-D7vN_aA3.js";import"./LoadingCircle-DNdkLylS.js";import"./IconCheckMark16-BSi_kkf1.js";import"./IconCross16-BshCNAKj.js";import"./IconExclamationMarkTriangle16-DGaIrm4W.js";import"./IconEyeOff16-C861zzFg.js";import"./generateRandomId-Dxm0_E-2.js";import"./validation-CJXPAjNB.js";import"./useButton-4BonjH6T.js";import"./useFocusable-tbSHi6HF.js";import"./useFocusRing-DlZ7W1lC.js";import"./useEffectEvent-sx_rQw4H.js";import"./chain-DIgLrs-2.js";import"./index-Cho7bklK.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./IconSize-BcCrF_mi.js";import"./InputLabel-B7rWHWAc.js";import"./LegacyTooltip-Bv43SLQZ.js";import"./useLink-EfjbR36K.js";import"./usePopper-BHXQC2xD.js";import"./index-DlnOb27V.js";import"./Portal-B3A1C5qZ.js";import"./useMemoizedId-BicaxHcO.js";import"./IconDocument-BT3LAKWU.js";import"./IconExclamationMarkCircle24-4UiwpX0o.js";import"./IconExclamationMarkTriangle-DebOIQd7.js";import"./IconExclamationMarkTriangle24-BCoex7hw.js";import"./IconQuestionMarkCircle-7EPrDyIp.js";import"./IconClipboard16-CPE6JlPb.js";import"./IconCross-U1qlrHTt.js";const t=x.forwardRef(({children:e,"data-test-id":p="fondue-form",...s},l)=>r.jsx("form",{"data-test-id":p,ref:l,...s,children:e}));t.displayName="FondueForm";t.__docgenInfo={description:"",methods:[],displayName:"FondueForm",props:{"data-test-id":{defaultValue:{value:"'fondue-form'",computed:!1},required:!1}}};const er={title:"Legacy Components/Deprecated/Form",component:t,tags:["autodocs"],parameters:{status:{type:"deprecated"}}},o=e=>r.jsxs(t,{...e,children:[r.jsx(u,{clickable:!0,label:{children:"Input Label",required:!1,htmlFor:"label"},children:r.jsx(f,{id:"label",value:"some value"})}),r.jsx(n,{className:"tw-my-2",children:r.jsx(c,{onClick:d("click"),children:"Save"})})]});o.__docgenInfo={description:"",methods:[],displayName:"Default",props:{children:{required:!0,tsType:{name:"ReactNode"},description:""},"data-test-id":{required:!1,tsType:{name:"string"},description:""}}};var m,i,a;o.parameters={...o.parameters,docs:{...(m=o.parameters)==null?void 0:m.docs,source:{originalSource:`(args: FormProps) => <Form {...args}>
        <FormControl clickable label={{
    children: 'Input Label',
    required: false,
    htmlFor: 'label'
  }}>
            <TextInput id="label" value="some value" />
        </FormControl>
        <Box className="tw-my-2">
            <Button onClick={action('click')}>Save</Button>
        </Box>
    </Form>`,...(a=(i=o.parameters)==null?void 0:i.docs)==null?void 0:a.source}}};const mr=["Default"];export{o as Default,mr as __namedExportsOrder,er as default};
