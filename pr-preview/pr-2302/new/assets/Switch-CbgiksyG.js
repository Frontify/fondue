import{j as i}from"./jsx-runtime-BYYWji4R.js";import{r as c}from"./index-ClcD9ViR.js";import{c as B}from"./index-BIU06K05.js";import{u as H}from"./index-BUNfiIdP.js";import{c as M}from"./index-CWz5EflU.js";import{u as R,a as F}from"./index-6uuHhnjI.js";import{u as N}from"./index-sY83p_TZ.js";import{P as T}from"./index-Cr2iZZCw.js";import{c as L}from"./styleUtilities-Byf6Fdv2.js";var g="Switch",[I,re]=M(g),[z,V]=I(g),k=c.forwardRef((e,r)=>{const{__scopeSwitch:t,name:a,checked:n,defaultChecked:l,required:s,disabled:o,value:d="on",onCheckedChange:f,form:v,...m}=e,[u,x]=c.useState(null),j=H(r,h=>x(h)),b=c.useRef(!1),y=u?v||!!u.closest("form"):!0,[p=!1,q]=R({prop:n,defaultProp:l,onChange:f});return i.jsxs(z,{scope:t,checked:p,disabled:o,children:[i.jsx(T.button,{type:"button",role:"switch","aria-checked":p,"aria-required":s,"data-state":E(p),"data-disabled":o?"":void 0,disabled:o,value:d,...m,ref:j,onClick:B(e.onClick,h=>{q(P=>!P),y&&(b.current=h.isPropagationStopped(),b.current||h.stopPropagation())})}),y&&i.jsx(A,{control:u,bubbles:!b.current,name:a,value:d,checked:p,required:s,disabled:o,form:v,style:{transform:"translateX(-100%)"}})]})});k.displayName=g;var S="SwitchThumb",C=c.forwardRef((e,r)=>{const{__scopeSwitch:t,...a}=e,n=V(S,t);return i.jsx(T.span,{"data-state":E(n.checked),"data-disabled":n.disabled?"":void 0,...a,ref:r})});C.displayName=S;var A=e=>{const{control:r,checked:t,bubbles:a=!0,...n}=e,l=c.useRef(null),s=N(t),o=F(r);return c.useEffect(()=>{const d=l.current,f=window.HTMLInputElement.prototype,m=Object.getOwnPropertyDescriptor(f,"checked").set;if(s!==t&&m){const u=new Event("click",{bubbles:a});m.call(d,t),d.dispatchEvent(u)}},[s,t,a]),i.jsx("input",{type:"checkbox","aria-hidden":!0,defaultChecked:t,...n,tabIndex:-1,ref:l,style:{...e.style,...o,position:"absolute",pointerEvents:"none",opacity:0,margin:0}})};function E(e){return e?"checked":"unchecked"}var D=k,O=C;const U="_root_1jvm5_5",W="_small_1jvm5_14",X="_medium_1jvm5_18",$="_large_1jvm5_22",G="_thumb_1jvm5_59",w={root:U,small:W,medium:X,large:$,thumb:G},J=({value:e,defaultValue:r,size:t="medium",onChange:a,"data-test-id":n="fondue-switch","aria-label":l="Switch",...s},o)=>i.jsx(D,{ref:o,checked:e,defaultChecked:r,className:L([w.root,w[t]]),onCheckedChange:a,"aria-label":l,"data-test-id":n,...s,children:i.jsx(O,{className:w.thumb})}),_=c.forwardRef(J);_.displayName="Switch";_.__docgenInfo={description:"",methods:[],displayName:"Switch",props:{id:{required:!1,tsType:{name:"string"},description:""},name:{required:!1,tsType:{name:"string"},description:""},size:{required:!1,tsType:{name:"union",raw:"'small' | 'medium' | 'large'",elements:[{name:"literal",value:"'small'"},{name:"literal",value:"'medium'"},{name:"literal",value:"'large'"}]},description:`The size of the switch component.
@default medium`,defaultValue:{value:"'medium'",computed:!1}},value:{required:!1,tsType:{name:"boolean"},description:`The active value in the select component. This is used to control the select externally.
@default false`},defaultValue:{required:!1,tsType:{name:"boolean"},description:`The default value of the select component. Used for uncontrolled usages.
@default false`},disabled:{required:!1,tsType:{name:"boolean"},description:`Disables the select component.
@default false`},required:{required:!1,tsType:{name:"boolean"},description:`Whether the switch is required.
@default false`},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(checked: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"checked"}],return:{name:"void"}}},description:`Callback function that is called when the switch is toggled.
@param checked - The new checked state of the switch`},onBlur:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: FormEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"FormEvent",elements:[{name:"HTMLButtonElement"}],raw:"FormEvent<HTMLButtonElement>"},name:"event"}],return:{name:"void"}}},description:`Event handler called when the checkbox is blurred
@param event - The event object`},onFocus:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: FormEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"FormEvent",elements:[{name:"HTMLButtonElement"}],raw:"FormEvent<HTMLButtonElement>"},name:"event"}],return:{name:"void"}}},description:`Event handler called when the checkbox is focused
@param event - The event object`},"data-test-id":{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"'fondue-switch'",computed:!1}},"aria-label":{defaultValue:{value:"'Switch'",computed:!1},required:!1}}};export{_ as S};
