import{j as d}from"./jsx-runtime-DH9XN8A8.js";import{I as T}from"./LegacyTooltip-BReeJmjq.js";import{I as S}from"./IconSize-BcCrF_mi.js";import{a as g,T as f}from"./TooltipIcon-DWdr_hgc.js";import"./index-v7USjxUg.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./useLink-C2PgwcjG.js";import"./useFocusable-BRFkliNn.js";import"./useFocusRing-CP9UJNUw.js";import"./useEffectEvent-BaECT7_f.js";import"./chain-C8AhrK0W.js";import"./usePopper-BO8FF5JQ.js";import"./index-voQlCD4e.js";import"./index-DlnOb27V.js";import"./Button-BfBJpGQT.js";import"./useButton-B6orroTH.js";import"./focusStyle-CBFElZiz.js";import"./merge-DI-veSMP.js";import"./Portal-BMcVKwlx.js";import"./useMemoizedId-Cl5PI4eu.js";import"./IconCheckMark-CMS57PRn.js";import"./IconExclamationMarkCircle24-CS86ZjBV.js";import"./IconExclamationMarkTriangle-CTTfs2nR.js";import"./IconExclamationMarkTriangle24-ZUoV6XtQ.js";import"./IconQuestionMarkCircle-DT_LrHkX.js";const J={title:"Deprecated/TooltipIcon",component:g,tags:["autodocs"],argTypes:{triggerStyle:{options:Object.values(f),control:{type:"select"}}},args:{tooltip:{content:"Lorem ipsum dolor sit amet."},triggerStyle:"Primary"},parameters:{status:{type:"deprecated"},docs:{description:{component:"### This component is deprecated, please use the [new Tooltip component](/docs/current_components-tooltip--documentation) instead."}}}},e=I=>d.jsx(g,{...I}),r=e.bind({}),o=e.bind({});o.args={iconSize:S.Size20};const t=e.bind({});t.args={triggerIcon:d.jsx(T,{filled:!0})};var i,s,p;r.parameters={...r.parameters,docs:{...(i=r.parameters)==null?void 0:i.docs,source:{originalSource:`(args: TooltipIconProps) => {
  return <TooltipIcon {...args} />;
}`,...(p=(s=r.parameters)==null?void 0:s.docs)==null?void 0:p.source}}};var a,n,c;o.parameters={...o.parameters,docs:{...(a=o.parameters)==null?void 0:a.docs,source:{originalSource:`(args: TooltipIconProps) => {
  return <TooltipIcon {...args} />;
}`,...(c=(n=o.parameters)==null?void 0:n.docs)==null?void 0:c.source}}};var m,l,u;t.parameters={...t.parameters,docs:{...(m=t.parameters)==null?void 0:m.docs,source:{originalSource:`(args: TooltipIconProps) => {
  return <TooltipIcon {...args} />;
}`,...(u=(l=t.parameters)==null?void 0:l.docs)==null?void 0:u.source}}};const K=["WithDefaultIconSize","WithCustomIconSize","WithCustomIcon"];export{t as WithCustomIcon,o as WithCustomIconSize,r as WithDefaultIconSize,K as __namedExportsOrder,J as default};
