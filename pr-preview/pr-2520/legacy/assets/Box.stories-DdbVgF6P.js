import{j as g}from"./iframe-BIHtZq1U.js";import{B as b,a as i,S as v}from"./Box-hobupWpc.js";import"./preload-helper-OAyExbmo.js";import"./borderStyle-D9jrV09G.js";import"./merge-DI-veSMP.js";import"./focusStyle-Ch_WJ4aJ.js";import"./input-Dg-p3nwO.js";import"./Button-mGP0pMyC.js";import"./useButton-DWxqWwpW.js";import"./useFocusable-CCZ_IdsK.js";import"./useFocusRing-Da_21BgF.js";import"./useEffectEvent-B6YEwqBF.js";import"./chain-BJcYIR2n.js";import"./index-BaBp4jCW.js";import"./IconSize-BcCrF_mi.js";import"./Divider-cLTm9Yw5.js";import"./Dropdown-B4ISVlBN.js";import"./FocusScope-D3WjdVoV.js";import"./useOverlayTriggerState-BkNFCR_E.js";import"./useControlledState-Ch5mM6EN.js";import"./useMenuTrigger-eQ_6GCii.js";import"./useLabels-CsVTyMz0.js";import"./useLocalizedStringFormatter-DFpdFw8u.js";import"./context-Bs0yD0C5.js";import"./VisuallyHidden-BVpZREPf.js";import"./helper-KKu_vcbg.js";import"./keyboard-BvwPagi2.js";import"./SelectionManager-C4BYkeTT.js";import"./useField-C-jP7PP4.js";import"./useFormValidationState-DX0Jxj92.js";import"./usePopper-CDDU-Abt.js";import"./index-AB-0uad5.js";import"./MenuItem-CGosstT4.js";import"./IconCaretRight-ktveUp1R.js";import"./IconCheckMark-ByDDCOdk.js";import"./elements-BOYmskOL.js";import"./LoadingCircle-BPnjjCMJ.js";import"./Trigger-Btbv4h_W.js";import"./IconCaretDown-nRwc6BJm.js";import"./IconCaretDown16-BBlgb7KY.js";import"./IconCross-uSSJtr0W.js";import"./IconExclamationMarkTriangle-Eu8lIART.js";import"./IconExclamationMarkTriangle24-DWved3Uv.js";import"./IconTrashBin16-kc1AA4xY.js";import"./IconTrashBin24-DmxFkRQV.js";import"./validation-C9S5KgfE.js";import"./EnablePortalWrapper-B0IMxAw1.js";import"./Portal-XQEcDBQ_.js";import"./useMemoizedId-8iqIoAJZ.js";import"./FormControl-CQNf1I9W.js";import"./InputLabel-OzfXMBfp.js";import"./TooltipIcon-t51GQRdv.js";import"./LegacyTooltip-CyQP51yp.js";import"./useLink-BGmSUlDQ.js";import"./IconExclamationMarkCircle24-Dr5MpX5j.js";import"./IconQuestionMarkCircle-CBsONxKB.js";import"./Switch-D9Ul3eWT.js";import"./TabItem-BsMi3ALW.js";import"./TextInput-LNvw8Zy7.js";import"./Tooltip-D5sADaPC.js";import"./useClickOutside-C7K7SNSM.js";import"./dialog-D9O7a7Fm.js";import"./Tree-BNN95NQH.js";import"./_Uint8Array-CwPxMkg2.js";const t={options:Object.values(v),control:{type:"select"},defaultValue:""},Ct={title:"Layout/Box",component:i,tags:["autodocs"],argTypes:{className:{type:"string"},paddingX:t,paddingY:t,padding:t,marginX:t,marginY:t,margin:t,"data-test-id":{type:"string"},"aria-label":{type:"string"},as:{options:["div","span"],control:{type:"select"}},children:{table:{disable:!0}}},args:{className:"tw-font-bold tw-flex","data-test-id":b,children:"You can pass any props you want into this component. In the controls you can find examples with camelCased, aria and data attributes."},parameters:{status:{type:"deprecated"},docs:{description:{component:"### This component is deprecated, please use the [new Box layout component](/docs/current_layout-box--documentation) instead."}}}},p=h=>g.jsx(i,{...h}),e=p.bind({}),o=p.bind({});o.args={className:"tw-bg-box-positive hover:tw-bg-box-positive-hover tw-text-box-positive-inverse hover:tw-text-box-positive-inverse-hover"};const r=p.bind({});r.args={className:"tw-flex tw-bg-box-positive hover:tw-bg-box-positive-hover tw-text-box-positive-inverse hover:tw-text-box-positive-inverse-hover",children:g.jsx(i,{as:"span",children:"I am a Box component rendered as a span element inside another Box with display: flex."}),padding:16};var s,a,m;e.parameters={...e.parameters,docs:{...(s=e.parameters)==null?void 0:s.docs,source:{originalSource:`(args: Props) => {
  return <BoxComponent {...args} />;
}`,...(m=(a=e.parameters)==null?void 0:a.docs)==null?void 0:m.source}}};var n,c,d;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`(args: Props) => {
  return <BoxComponent {...args} />;
}`,...(d=(c=o.parameters)==null?void 0:c.docs)==null?void 0:d.source}}};var x,l,u;r.parameters={...r.parameters,docs:{...(x=r.parameters)==null?void 0:x.docs,source:{originalSource:`(args: Props) => {
  return <BoxComponent {...args} />;
}`,...(u=(l=r.parameters)==null?void 0:l.docs)==null?void 0:u.source}}};const Et=["Box","BoxWithAliasTokens","BoxWithNestedBoxAsSpan"];export{e as Box,o as BoxWithAliasTokens,r as BoxWithNestedBoxAsSpan,Et as __namedExportsOrder,Ct as default};
