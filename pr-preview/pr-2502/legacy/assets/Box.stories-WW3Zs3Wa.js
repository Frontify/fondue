import{j as g}from"./iframe-MoBs3oke.js";import{B as b,a as i,S as v}from"./Box-BBpNHmR5.js";import"./preload-helper-B933Jwna.js";import"./borderStyle-D9jrV09G.js";import"./merge-DI-veSMP.js";import"./focusStyle-Ch_WJ4aJ.js";import"./input-Vnz1g2HA.js";import"./Button-CHSQ5G04.js";import"./useButton-C5tY8d-2.js";import"./useFocusable-CXK0fL0G.js";import"./useFocusRing-2zpbRi_h.js";import"./useEffectEvent-B10gOIRQ.js";import"./chain-bxVqvEcS.js";import"./index-XNeqmIYg.js";import"./IconSize-BcCrF_mi.js";import"./DialogBody-B9R5tIxS.js";import"./dialog-D9O7a7Fm.js";import"./Divider-BiSgeS5Z.js";import"./Dropdown-BZzjCJXd.js";import"./FocusScope-AHMkJDTf.js";import"./useOverlayTriggerState-CBCaqV4y.js";import"./useControlledState-BMEIdEBn.js";import"./useMenuTrigger-Cfg04eQV.js";import"./useLabels-DVbtlKZe.js";import"./useLocalizedStringFormatter-CkHgGyi4.js";import"./context-DuKYVhKu.js";import"./VisuallyHidden-DQNXk2fv.js";import"./helper-BqzIPBnA.js";import"./keyboard-Bh-3d-67.js";import"./SelectionManager-BeylGFv3.js";import"./useField-URXo4TDX.js";import"./useFormValidationState-iA7Vh-Q-.js";import"./usePopper-BG1lwv8D.js";import"./index-DaGbxSuI.js";import"./MenuItem-DHR5LbTg.js";import"./IconCaretRight-BNCvjaUk.js";import"./IconCheckMark-Dq94ZI-W.js";import"./elements-BOYmskOL.js";import"./LoadingCircle-CeR8qJR0.js";import"./Trigger-CtQV1a50.js";import"./IconCaretDown-KuloZ5wo.js";import"./IconCaretDown16-Bd0YWETo.js";import"./IconCross-Drpj3pyS.js";import"./IconExclamationMarkTriangle-Q8ertc4w.js";import"./IconExclamationMarkTriangle24-B9dRqTTK.js";import"./IconTrashBin16-DW5TDvsW.js";import"./IconTrashBin24-M6xuWU20.js";import"./validation-C9S5KgfE.js";import"./EnablePortalWrapper-qB3CI-P9.js";import"./Portal-DqGP2ziF.js";import"./useMemoizedId-IOJoatZ5.js";import"./FormControl-CesNQFPy.js";import"./InputLabel-CXvfWDQS.js";import"./TooltipIcon-Dt5djrIf.js";import"./LegacyTooltip--XkvheMY.js";import"./useLink-BCZ4_2_m.js";import"./IconExclamationMarkCircle24-sI7DpcuD.js";import"./IconQuestionMarkCircle-Bm_G3GHX.js";import"./Switch-B69oNbL0.js";import"./TabItem-BL2HOdhs.js";import"./TextInput-Yo756f2e.js";import"./Tooltip-B25CwDsd.js";import"./useClickOutside-XWlSsuBV.js";import"./Tree-C4Hqtk5X.js";import"./_Uint8Array-CwPxMkg2.js";const t={options:Object.values(v),control:{type:"select"},defaultValue:""},Et={title:"Layout/Box",component:i,tags:["autodocs"],argTypes:{className:{type:"string"},paddingX:t,paddingY:t,padding:t,marginX:t,marginY:t,margin:t,"data-test-id":{type:"string"},"aria-label":{type:"string"},as:{options:["div","span"],control:{type:"select"}},children:{table:{disable:!0}}},args:{className:"tw-font-bold tw-flex","data-test-id":b,children:"You can pass any props you want into this component. In the controls you can find examples with camelCased, aria and data attributes."},parameters:{status:{type:"deprecated"},docs:{description:{component:"### This component is deprecated, please use the [new Box layout component](/docs/current_layout-box--documentation) instead."}}}},p=h=>g.jsx(i,{...h}),e=p.bind({}),o=p.bind({});o.args={className:"tw-bg-box-positive hover:tw-bg-box-positive-hover tw-text-box-positive-inverse hover:tw-text-box-positive-inverse-hover"};const r=p.bind({});r.args={className:"tw-flex tw-bg-box-positive hover:tw-bg-box-positive-hover tw-text-box-positive-inverse hover:tw-text-box-positive-inverse-hover",children:g.jsx(i,{as:"span",children:"I am a Box component rendered as a span element inside another Box with display: flex."}),padding:16};var s,a,m;e.parameters={...e.parameters,docs:{...(s=e.parameters)==null?void 0:s.docs,source:{originalSource:`(args: Props) => {
  return <BoxComponent {...args} />;
}`,...(m=(a=e.parameters)==null?void 0:a.docs)==null?void 0:m.source}}};var n,c,d;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`(args: Props) => {
  return <BoxComponent {...args} />;
}`,...(d=(c=o.parameters)==null?void 0:c.docs)==null?void 0:d.source}}};var x,l,u;r.parameters={...r.parameters,docs:{...(x=r.parameters)==null?void 0:x.docs,source:{originalSource:`(args: Props) => {
  return <BoxComponent {...args} />;
}`,...(u=(l=r.parameters)==null?void 0:l.docs)==null?void 0:u.source}}};const It=["Box","BoxWithAliasTokens","BoxWithNestedBoxAsSpan"];export{e as Box,o as BoxWithAliasTokens,r as BoxWithNestedBoxAsSpan,It as __namedExportsOrder,Et as default};
