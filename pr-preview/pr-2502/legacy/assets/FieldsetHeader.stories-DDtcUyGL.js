import{r as s,j as a}from"./iframe-BGj-8Xma.js";import{I as l}from"./IconIcon-Bd9VAMbf.js";import{F as p,a as r,b as m}from"./FieldsetHeader-2SFEFXzm.js";import"./preload-helper-B933Jwna.js";import"./IconSize-BcCrF_mi.js";import"./IconIcon16-BwUtjmOe.js";import"./IconIcon24-Db6VdwlM.js";import"./Switch-9jQk0BCQ.js";import"./useFocusRing-BlnI74c6.js";import"./useEffectEvent-BlEEx4Xd.js";import"./InputLabel-DaO4kGGP.js";import"./TooltipIcon-C3ABrqlZ.js";import"./LegacyTooltip-D-bnhDRE.js";import"./useLink-By44ZSEz.js";import"./useFocusable-CknK0IHp.js";import"./chain-DZoKwBUY.js";import"./index-oNtiiR1K.js";import"./usePopper-DX_Dz00k.js";import"./index-DWLevnU7.js";import"./Button-2EBAcOH_.js";import"./useButton-DphR1AkN.js";import"./focusStyle-Ch_WJ4aJ.js";import"./merge-DI-veSMP.js";import"./Portal-9RvB8Aeb.js";import"./useMemoizedId-HkVr2jVB.js";import"./IconCheckMark-BK0eBuyp.js";import"./IconExclamationMarkCircle24-CmLDFqXY.js";import"./IconExclamationMarkTriangle-9V-82lwc.js";import"./IconExclamationMarkTriangle24-Bicc5sn3.js";import"./IconQuestionMarkCircle-BnLlupnH.js";import"./IconCaretDown-DZ5oK8iI.js";import"./IconCaretDown16-b2u6_3T3.js";import"./IconMinus-DmbVwJ6A.js";import"./IconPlus-C-Um06TV.js";import"./IconPlus16-NX3k4kV1.js";const Q={title:"Deprecated/Fieldset Header",component:m,tags:["autodocs"],argTypes:{size:{options:[r.Small,r.Medium,r.Large],control:{type:"radio"}},type:{options:Object.values(p),control:{type:"radio"}}},args:{size:r.Large,active:!0,type:p.Default,disabled:!1,bold:!0,children:"Heading",decorator:!0}},t=e=>{const[i,o]=s.useState(e.active);return s.useEffect(()=>{o(e.active)},[e.active]),a.jsx(m,{...e,decorator:e.decorator?a.jsx(l,{}):null,active:i,onClick:()=>o(!i)})};t.__docgenInfo={description:"",methods:[],displayName:"FieldsetHeader",props:{size:{required:!1,tsType:{name:"FieldsetHeaderSize"},description:""},active:{required:!1,tsType:{name:"boolean"},description:""},decorator:{required:!1,tsType:{name:"ReactNode"},description:""},type:{required:!1,tsType:{name:"FieldsetHeaderType"},description:""},disabled:{required:!1,tsType:{name:"boolean"},description:""},bold:{required:!1,tsType:{name:"boolean"},description:""},children:{required:!0,tsType:{name:"string"},description:""},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},as:{required:!1,tsType:{name:"JSX.IntrinsicElements"},description:""},tabIndex:{required:!1,tsType:{name:"number"},description:""},"data-test-id":{required:!1,tsType:{name:"string"},description:""}}};var d,n,c;t.parameters={...t.parameters,docs:{...(d=t.parameters)==null?void 0:d.docs,source:{originalSource:`(args: FieldsetHeaderProps) => {
  const [active, setActive] = useState(args.active);
  useEffect(() => {
    setActive(args.active);
  }, [args.active]);
  return <FieldsetHeaderComponent {...args} decorator={args.decorator ? <IconIcon /> : null} active={active} onClick={() => setActive(!active)} />;
}`,...(c=(n=t.parameters)==null?void 0:n.docs)==null?void 0:c.source}}};const U=["FieldsetHeader"];export{t as FieldsetHeader,U as __namedExportsOrder,Q as default};
