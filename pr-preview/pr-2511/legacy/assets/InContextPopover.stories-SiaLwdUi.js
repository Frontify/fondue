import{r as p,j as t}from"./iframe-DWfSlb0i.js";import{a as l}from"./Box-B8vdQMYS.js";import{B as d}from"./Button-DfZJCDFK.js";import{D as u}from"./DialogBody-BQqzXCEu.js";import{D as g}from"./DialogFooter-kBXbVCPE.js";import{D as f}from"./DialogHeader-COfthtdw.js";import{P as n}from"./Popover-CL1qwc2Q.js";import{I as x}from"./IconIcon-CQsZulAl.js";import"./preload-helper-sQDyWCwb.js";import"./borderStyle-D9jrV09G.js";import"./merge-DI-veSMP.js";import"./focusStyle-Ch_WJ4aJ.js";import"./input-DJgw3DOR.js";import"./Checkbox-3AnZEutj.js";import"./useFocusable-DOCSmQza.js";import"./useFocusRing-DXr4GaW4.js";import"./useEffectEvent-CI6MWEdz.js";import"./chain-BD6ckHh_.js";import"./index-RS2pu7zh.js";import"./useFormValidationState-A3yoOfI8.js";import"./useControlledState-DnAESSBa.js";import"./InputLabel-vAeK8DpM.js";import"./TooltipIcon-loeESxcb.js";import"./LegacyTooltip-8KnSS8qw.js";import"./useLink-DD_m4zw3.js";import"./usePopper-DE0FsvRn.js";import"./index-C2E5ku4L.js";import"./Portal--5uNvX5p.js";import"./IconSize-BcCrF_mi.js";import"./useMemoizedId-D3p_iY0w.js";import"./IconCheckMark-CWf5DU7H.js";import"./IconExclamationMarkCircle24-CzamvZqc.js";import"./IconExclamationMarkTriangle-BTKn1CzC.js";import"./IconExclamationMarkTriangle24-BF-tkgi1.js";import"./IconQuestionMarkCircle-BhvUbj5E.js";import"./IconMinus-DuFXUXkh.js";import"./Divider-DnBABlP5.js";import"./Dropdown-BHsiTQV7.js";import"./useButton-kVvP6TUN.js";import"./FocusScope-BTNrxNkp.js";import"./useOverlayTriggerState-DWWP11B4.js";import"./useMenuTrigger-Du4Opddv.js";import"./useLabels-CvtAt0UP.js";import"./useLocalizedStringFormatter-C7DvXs9K.js";import"./context-hKhapaoN.js";import"./VisuallyHidden-DZNryNZ3.js";import"./helper-vBDadUUD.js";import"./keyboard-CWtqk4ZZ.js";import"./SelectionManager-zjrIR6Hq.js";import"./useField-Bh5nUEEB.js";import"./MenuItem-CVfzkKbS.js";import"./IconCaretRight-B8cJ3Bt3.js";import"./elements-BOYmskOL.js";import"./LoadingCircle-C5zj3N-A.js";import"./Trigger-BpYCVTVr.js";import"./IconCaretDown-CS4fl5qd.js";import"./IconCaretDown16-DXYTdGKY.js";import"./IconCross-BkSH3053.js";import"./IconTrashBin16-C5mIjvXn.js";import"./IconTrashBin24-B9qsB300.js";import"./validation-C9S5KgfE.js";import"./EnablePortalWrapper-T0srCoF2.js";import"./FormControl-ny2reeax.js";import"./Switch-D2be-V_f.js";import"./TabItem-C-vbuzzy.js";import"./TextInput-_VQAd_TX.js";import"./Tooltip-jPx8IgnA.js";import"./useClickOutside-C0rCeFHZ.js";import"./dialog-D9O7a7Fm.js";import"./Tree-ClX99oC1.js";import"./_Uint8Array-CwPxMkg2.js";import"./Flex-Dto_u-N_.js";import"./IconIcon16-CxY4vcIz.js";import"./IconIcon24-CwAEmp0G.js";const St={title:"Experimental/Popover/In Context",Component:n,tags:["autodocs"],args:{theme:"light"}},h=c=>{const[e,i]=p.useState(!1),r=p.useRef(null);return t.jsxs("div",{className:"tw-h-32 tw-flex tw-justify-center tw-items-center",children:[t.jsx(d,{icon:t.jsx(x,{}),onClick:()=>i(!e),ref:r,children:"Trigger"}),t.jsx(n,{...c,anchor:r,open:e,handleClose:()=>i(!1),children:t.jsxs(l,{className:"tw-w-[400px]",children:[t.jsx(f,{title:"Title",padding:"compact"}),t.jsx(u,{padding:"compact",children:t.jsx("p",{children:"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Eos explicabo iure placeat quae quidem reiciendis sequi, veniam. Cupiditate eos necessitatibus nemo non obcaecati, quod ullam. Beatae deserunt eum quibusdam ratione."})}),t.jsx(g,{padding:"compact",actionButtons:[{children:"Confirm",onClick:()=>i(!1)}]})]})})]})},o=h.bind({});o.args={};var m,s,a;o.parameters={...o.parameters,docs:{...(m=o.parameters)==null?void 0:m.docs,source:{originalSource:`args => {
  const [isOpen, setIsOpen] = useState(false);
  const triggerRef = useRef<HTMLButtonElement | null>(null);
  return <div className="tw-h-32 tw-flex tw-justify-center tw-items-center">
            <Button icon={<IconIcon />} onClick={() => setIsOpen(!isOpen)} ref={triggerRef}>
                Trigger
            </Button>
            <Popover {...args} anchor={triggerRef} open={isOpen} handleClose={() => setIsOpen(false)}>
                <Box className="tw-w-[400px]">
                    <DialogHeader title="Title" padding="compact"></DialogHeader>
                    <DialogBody padding="compact">
                        <p>
                            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Eos explicabo iure placeat quae
                            quidem reiciendis sequi, veniam. Cupiditate eos necessitatibus nemo non obcaecati, quod
                            ullam. Beatae deserunt eum quibusdam ratione.
                        </p>
                    </DialogBody>
                    <DialogFooter padding="compact" actionButtons={[{
          children: 'Confirm',
          onClick: () => setIsOpen(false)
        }]}></DialogFooter>
                </Box>
            </Popover>
        </div>;
}`,...(a=(s=o.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const Wt=["WithHeaderAndFooter"];export{o as WithHeaderAndFooter,Wt as __namedExportsOrder,St as default};
