import{j as g}from"./iframe-AUIfQrP4.js";import{B as b,a as i,S as v}from"./Box-lCOHognj.js";import"./preload-helper-sQDyWCwb.js";import"./borderStyle-D9jrV09G.js";import"./merge-DI-veSMP.js";import"./focusStyle-Ch_WJ4aJ.js";import"./input-C06IVxfj.js";import"./Button-DlFiAFHP.js";import"./useButton-D0wGE8qM.js";import"./useFocusable-CnizbhnP.js";import"./useFocusRing-BoSeZWz5.js";import"./useEffectEvent-Bcoupwh6.js";import"./chain-oFsE9aEj.js";import"./index-BEcmyHTP.js";import"./IconSize-BcCrF_mi.js";import"./Divider-DRPbvsLK.js";import"./Dropdown-C-r4J8l_.js";import"./FocusScope-Ch0sNNKQ.js";import"./useOverlayTriggerState-CuK4f_N_.js";import"./useControlledState-BAllyYje.js";import"./useMenuTrigger-B7Fpswne.js";import"./useLabels--84juFjK.js";import"./useLocalizedStringFormatter-gnsmCImp.js";import"./context-Cy3OkrWF.js";import"./VisuallyHidden-DuFlpOV3.js";import"./helper-5kMBwN-m.js";import"./keyboard-XYTEU8GG.js";import"./SelectionManager-D1hXYaW9.js";import"./useField-CFbP_W3z.js";import"./useFormValidationState-C43Yln6j.js";import"./usePopper-BdKXdpb8.js";import"./index-zrmajsre.js";import"./MenuItem-ChgvnhCc.js";import"./IconCaretRight-VlGptlRu.js";import"./IconCheckMark-B520aOQQ.js";import"./elements-BOYmskOL.js";import"./LoadingCircle-CxtaYhTg.js";import"./Trigger-SlyTZoZ6.js";import"./IconCaretDown-Bj4WZxKG.js";import"./IconCaretDown16-DPOLoDZ8.js";import"./IconCross-qw3ZfYE1.js";import"./IconExclamationMarkTriangle-gBP2crPl.js";import"./IconExclamationMarkTriangle24-LaFkKa3a.js";import"./IconTrashBin16-B-qnlzDI.js";import"./IconTrashBin24-cBVJi1WR.js";import"./validation-C9S5KgfE.js";import"./EnablePortalWrapper-BKs_Z6VZ.js";import"./Portal-CCtPellx.js";import"./useMemoizedId-Df0mYjrE.js";import"./FormControl-84pwgQ7U.js";import"./InputLabel-BynWe2eY.js";import"./TooltipIcon-Dw_mQpTa.js";import"./LegacyTooltip-DttKv4lK.js";import"./useLink-BENDotdL.js";import"./IconExclamationMarkCircle24-CpDxWh5c.js";import"./IconQuestionMarkCircle-CHVAx3jv.js";import"./Switch-D0kayeZk.js";import"./TabItem-L0p1LsT0.js";import"./TextInput-BnZMKyuu.js";import"./Tooltip-BAyR836C.js";import"./useClickOutside-D7WUOaPV.js";import"./dialog-D9O7a7Fm.js";import"./Tree-Re2vGutZ.js";import"./_Uint8Array-CwPxMkg2.js";const t={options:Object.values(v),control:{type:"select"},defaultValue:""},Ct={title:"Layout/Box",component:i,tags:["autodocs"],argTypes:{className:{type:"string"},paddingX:t,paddingY:t,padding:t,marginX:t,marginY:t,margin:t,"data-test-id":{type:"string"},"aria-label":{type:"string"},as:{options:["div","span"],control:{type:"select"}},children:{table:{disable:!0}}},args:{className:"tw-font-bold tw-flex","data-test-id":b,children:"You can pass any props you want into this component. In the controls you can find examples with camelCased, aria and data attributes."},parameters:{status:{type:"deprecated"},docs:{description:{component:"### This component is deprecated, please use the [new Box layout component](/docs/current_layout-box--documentation) instead."}}}},p=h=>g.jsx(i,{...h}),e=p.bind({}),o=p.bind({});o.args={className:"tw-bg-box-positive hover:tw-bg-box-positive-hover tw-text-box-positive-inverse hover:tw-text-box-positive-inverse-hover"};const r=p.bind({});r.args={className:"tw-flex tw-bg-box-positive hover:tw-bg-box-positive-hover tw-text-box-positive-inverse hover:tw-text-box-positive-inverse-hover",children:g.jsx(i,{as:"span",children:"I am a Box component rendered as a span element inside another Box with display: flex."}),padding:16};var s,a,m;e.parameters={...e.parameters,docs:{...(s=e.parameters)==null?void 0:s.docs,source:{originalSource:`(args: Props) => {
  return <BoxComponent {...args} />;
}`,...(m=(a=e.parameters)==null?void 0:a.docs)==null?void 0:m.source}}};var n,c,d;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`(args: Props) => {
  return <BoxComponent {...args} />;
}`,...(d=(c=o.parameters)==null?void 0:c.docs)==null?void 0:d.source}}};var x,l,u;r.parameters={...r.parameters,docs:{...(x=r.parameters)==null?void 0:x.docs,source:{originalSource:`(args: Props) => {
  return <BoxComponent {...args} />;
}`,...(u=(l=r.parameters)==null?void 0:l.docs)==null?void 0:u.source}}};const Et=["Box","BoxWithAliasTokens","BoxWithNestedBoxAsSpan"];export{e as Box,o as BoxWithAliasTokens,r as BoxWithNestedBoxAsSpan,Et as __namedExportsOrder,Ct as default};
