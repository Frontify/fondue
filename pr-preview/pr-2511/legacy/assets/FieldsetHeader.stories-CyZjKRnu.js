import{r as s,j as a}from"./iframe-DWfSlb0i.js";import{I as l}from"./IconIcon-CQsZulAl.js";import{F as p,a as r,b as m}from"./FieldsetHeader-CW64roli.js";import"./preload-helper-sQDyWCwb.js";import"./IconSize-BcCrF_mi.js";import"./IconIcon16-CxY4vcIz.js";import"./IconIcon24-CwAEmp0G.js";import"./Switch-D2be-V_f.js";import"./useFocusRing-DXr4GaW4.js";import"./useEffectEvent-CI6MWEdz.js";import"./InputLabel-vAeK8DpM.js";import"./TooltipIcon-loeESxcb.js";import"./LegacyTooltip-8KnSS8qw.js";import"./useLink-DD_m4zw3.js";import"./useFocusable-DOCSmQza.js";import"./chain-BD6ckHh_.js";import"./index-RS2pu7zh.js";import"./usePopper-DE0FsvRn.js";import"./index-C2E5ku4L.js";import"./Button-DfZJCDFK.js";import"./useButton-kVvP6TUN.js";import"./focusStyle-Ch_WJ4aJ.js";import"./merge-DI-veSMP.js";import"./Portal--5uNvX5p.js";import"./useMemoizedId-D3p_iY0w.js";import"./IconCheckMark-CWf5DU7H.js";import"./IconExclamationMarkCircle24-CzamvZqc.js";import"./IconExclamationMarkTriangle-BTKn1CzC.js";import"./IconExclamationMarkTriangle24-BF-tkgi1.js";import"./IconQuestionMarkCircle-BhvUbj5E.js";import"./IconCaretDown-CS4fl5qd.js";import"./IconCaretDown16-DXYTdGKY.js";import"./IconMinus-DuFXUXkh.js";import"./IconPlus-BWq2u4B-.js";import"./IconPlus16-CDMaQNjI.js";const Q={title:"Deprecated/Fieldset Header",component:m,tags:["autodocs"],argTypes:{size:{options:[r.Small,r.Medium,r.Large],control:{type:"radio"}},type:{options:Object.values(p),control:{type:"radio"}}},args:{size:r.Large,active:!0,type:p.Default,disabled:!1,bold:!0,children:"Heading",decorator:!0}},t=e=>{const[i,o]=s.useState(e.active);return s.useEffect(()=>{o(e.active)},[e.active]),a.jsx(m,{...e,decorator:e.decorator?a.jsx(l,{}):null,active:i,onClick:()=>o(!i)})};t.__docgenInfo={description:"",methods:[],displayName:"FieldsetHeader",props:{size:{required:!1,tsType:{name:"FieldsetHeaderSize"},description:""},active:{required:!1,tsType:{name:"boolean"},description:""},decorator:{required:!1,tsType:{name:"ReactNode"},description:""},type:{required:!1,tsType:{name:"FieldsetHeaderType"},description:""},disabled:{required:!1,tsType:{name:"boolean"},description:""},bold:{required:!1,tsType:{name:"boolean"},description:""},children:{required:!0,tsType:{name:"string"},description:""},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},as:{required:!1,tsType:{name:"JSX.IntrinsicElements"},description:""},tabIndex:{required:!1,tsType:{name:"number"},description:""},"data-test-id":{required:!1,tsType:{name:"string"},description:""}}};var d,n,c;t.parameters={...t.parameters,docs:{...(d=t.parameters)==null?void 0:d.docs,source:{originalSource:`(args: FieldsetHeaderProps) => {
  const [active, setActive] = useState(args.active);
  useEffect(() => {
    setActive(args.active);
  }, [args.active]);
  return <FieldsetHeaderComponent {...args} decorator={args.decorator ? <IconIcon /> : null} active={active} onClick={() => setActive(!active)} />;
}`,...(c=(n=t.parameters)==null?void 0:n.docs)==null?void 0:c.source}}};const U=["FieldsetHeader"];export{t as FieldsetHeader,U as __namedExportsOrder,Q as default};
