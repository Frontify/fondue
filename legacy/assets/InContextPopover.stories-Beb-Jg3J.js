import{r as p,j as t}from"./iframe-e0U6nGdg.js";import{a as l}from"./Box-CcTnB5oC.js";import{B as d}from"./Button-Ctisb_6d.js";import{D as u}from"./DialogBody-Dx17wxf9.js";import{D as g}from"./DialogFooter-B212lXOx.js";import{D as f}from"./DialogHeader-Djr_g7FH.js";import{P as n}from"./Popover-BvXtKA_X.js";import{I as x}from"./IconIcon-DYkysxgB.js";import"./preload-helper-C1FmrZbK.js";import"./borderStyle-D9jrV09G.js";import"./merge-DI-veSMP.js";import"./focusStyle-Ch_WJ4aJ.js";import"./input-CdSZxFhx.js";import"./Checkbox-D4Z7gexS.js";import"./useFocusable-C6iyQpXI.js";import"./useFocusRing-DSof9HDA.js";import"./useEffectEvent-Dhi-9t88.js";import"./chain-DPcgUXMv.js";import"./index-D5FaRCKO.js";import"./useFormValidationState-C2mn5rNF.js";import"./useControlledState-BpQJraUT.js";import"./InputLabel-CFiujHKp.js";import"./TooltipIcon-CNBwvO0d.js";import"./LegacyTooltip-DKPRkd1X.js";import"./useLink-CL9Z2HKk.js";import"./usePopper-Cpih_rft.js";import"./index-98LXcvpt.js";import"./Portal-VBGCNkL3.js";import"./IconSize-BcCrF_mi.js";import"./useMemoizedId-CqqrNheS.js";import"./IconCheckMark-CfVKgjOK.js";import"./IconExclamationMarkCircle24-B6aWDheE.js";import"./IconExclamationMarkTriangle-U04woIfm.js";import"./IconExclamationMarkTriangle24-CAomuIhH.js";import"./IconQuestionMarkCircle-DyI4ZTBV.js";import"./IconMinus-EZG3KcaU.js";import"./Divider-CdfwzZMT.js";import"./Dropdown-lFxzrlsx.js";import"./useButton-Bcy8TYTN.js";import"./FocusScope-BSeNmLNv.js";import"./useOverlayTriggerState-BQIEtMUz.js";import"./useMenuTrigger-CORkgcEy.js";import"./useLabels-Bh4FvyUH.js";import"./useLocalizedStringFormatter-CR04K9do.js";import"./context-CWMRxbca.js";import"./VisuallyHidden-CLSFgs5F.js";import"./helper-C2pKKaKh.js";import"./keyboard-CE97L4wN.js";import"./SelectionManager-BKU4lwyk.js";import"./useField-59HGCYzs.js";import"./MenuItem-B4scu5yA.js";import"./IconCaretRight-yWjutZzx.js";import"./elements-BOYmskOL.js";import"./LoadingCircle-Cs7quV73.js";import"./Trigger-Cxb9EGeR.js";import"./IconCaretDown-OtaJb8ue.js";import"./IconCaretDown16-LpGbVMin.js";import"./IconCross-ug7GD-W-.js";import"./IconTrashBin16-CWZYWSrk.js";import"./IconTrashBin24-CQrz4dri.js";import"./validation-C9S5KgfE.js";import"./EnablePortalWrapper-DoN8BKVL.js";import"./FormControl-BlwtdXQF.js";import"./Switch-CfCV9d5U.js";import"./TabItem-C65zp8VY.js";import"./TextInput-BnQ0OsaS.js";import"./Tooltip-DjWQa5nG.js";import"./useClickOutside-DuZ-KBg9.js";import"./dialog-D9O7a7Fm.js";import"./Tree-Cnd7JCjb.js";import"./_Uint8Array-CwPxMkg2.js";import"./Flex-CLcAQBie.js";import"./IconIcon16--szuSDKW.js";import"./IconIcon24-yvVAivXL.js";const St={title:"Experimental/Popover/In Context",Component:n,tags:["autodocs"],args:{theme:"light"}},h=c=>{const[e,i]=p.useState(!1),r=p.useRef(null);return t.jsxs("div",{className:"tw-h-32 tw-flex tw-justify-center tw-items-center",children:[t.jsx(d,{icon:t.jsx(x,{}),onClick:()=>i(!e),ref:r,children:"Trigger"}),t.jsx(n,{...c,anchor:r,open:e,handleClose:()=>i(!1),children:t.jsxs(l,{className:"tw-w-[400px]",children:[t.jsx(f,{title:"Title",padding:"compact"}),t.jsx(u,{padding:"compact",children:t.jsx("p",{children:"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Eos explicabo iure placeat quae quidem reiciendis sequi, veniam. Cupiditate eos necessitatibus nemo non obcaecati, quod ullam. Beatae deserunt eum quibusdam ratione."})}),t.jsx(g,{padding:"compact",actionButtons:[{children:"Confirm",onClick:()=>i(!1)}]})]})})]})},o=h.bind({});o.args={};var m,s,a;o.parameters={...o.parameters,docs:{...(m=o.parameters)==null?void 0:m.docs,source:{originalSource:`args => {
  const [isOpen, setIsOpen] = useState(false);
  const triggerRef = useRef<HTMLButtonElement | null>(null);
  return <div className="tw-h-32 tw-flex tw-justify-center tw-items-center">
            <Button icon={<IconIcon />} onClick={() => setIsOpen(!isOpen)} ref={triggerRef}>
                Trigger
            </Button>
            <Popover {...args} anchor={triggerRef} open={isOpen} handleClose={() => setIsOpen(false)}>
                <Box className="tw-w-[400px]">
                    <DialogHeader title="Title" padding="compact"></DialogHeader>
                    <DialogBody padding="compact">
                        <p>
                            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Eos explicabo iure placeat quae
                            quidem reiciendis sequi, veniam. Cupiditate eos necessitatibus nemo non obcaecati, quod
                            ullam. Beatae deserunt eum quibusdam ratione.
                        </p>
                    </DialogBody>
                    <DialogFooter padding="compact" actionButtons={[{
          children: 'Confirm',
          onClick: () => setIsOpen(false)
        }]}></DialogFooter>
                </Box>
            </Popover>
        </div>;
}`,...(a=(s=o.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const Wt=["WithHeaderAndFooter"];export{o as WithHeaderAndFooter,Wt as __namedExportsOrder,St as default};
