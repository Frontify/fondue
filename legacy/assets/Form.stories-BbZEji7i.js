import{r as n,j as o}from"./iframe-DTy7hSDB.js";import{a as d}from"./Box-B8CaeEYe.js";import{B as c}from"./Button-u3Szlpwi.js";import{F as u}from"./FormControl-Ce6rGZlg.js";import{T as f}from"./TextInput-CHRYntRv.js";import"./preload-helper-C1FmrZbK.js";import"./borderStyle-D9jrV09G.js";import"./merge-DI-veSMP.js";import"./focusStyle-Ch_WJ4aJ.js";import"./input-B6wq3pRW.js";import"./Divider-D6qgLBCM.js";import"./LoadingCircle-Ou7o56up.js";import"./Switch-Dt4o7jmn.js";import"./useFocusRing-BF_hD86R.js";import"./useEffectEvent-DWzMvHEb.js";import"./InputLabel-B_ubJQB3.js";import"./TooltipIcon-CizTpoEE.js";import"./LegacyTooltip-BDG39uOT.js";import"./useLink-D1XzLJMC.js";import"./useFocusable-DDn7q-OS.js";import"./chain-Dz97J3RG.js";import"./index-BmPKOmbc.js";import"./usePopper-CiVsTA5i.js";import"./index-CVY-dQCv.js";import"./Portal-DWemPOBz.js";import"./IconSize-BcCrF_mi.js";import"./useMemoizedId-Du4L_hMj.js";import"./IconCheckMark-Dg23ywij.js";import"./IconExclamationMarkCircle24-D9HRm0iS.js";import"./IconExclamationMarkTriangle-YIBYFaAr.js";import"./IconExclamationMarkTriangle24-DTwuytdQ.js";import"./IconQuestionMarkCircle-adEHOKLh.js";import"./TabItem-D2ZNavNs.js";import"./elements-BOYmskOL.js";import"./Tooltip-DpHHfC_y.js";import"./useClickOutside-CjHzvR4j.js";import"./EnablePortalWrapper-AD12x3kU.js";import"./dialog-D9O7a7Fm.js";import"./Tree-X4dp1bQ5.js";import"./_Uint8Array-CwPxMkg2.js";import"./IconCross-bYE-tDxm.js";import"./validation-C9S5KgfE.js";import"./useButton-CPiAOWt4.js";const t=n.forwardRef(({children:e,"data-test-id":p="fondue-form",...s},l)=>o.jsx("form",{"data-test-id":p,ref:l,...s,children:e}));t.displayName="FondueForm";t.__docgenInfo={description:"",methods:[],displayName:"FondueForm",props:{children:{required:!0,tsType:{name:"ReactNode"},description:""},"data-test-id":{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"'fondue-form'",computed:!1}}}};const{action:x}=__STORYBOOK_MODULE_ACTIONS__,mo={title:"Components/Form",component:t,tags:["autodocs"]},r=e=>o.jsxs(t,{...e,children:[o.jsx(u,{clickable:!0,label:{children:"Input Label",required:!1,htmlFor:"label"},children:o.jsx(f,{id:"label",value:"some value"})}),o.jsx(d,{className:"tw-my-2",children:o.jsx(c,{onClick:x("click"),children:"Save"})})]});r.__docgenInfo={description:"",methods:[],displayName:"Default",props:{children:{required:!0,tsType:{name:"ReactNode"},description:""},"data-test-id":{required:!1,tsType:{name:"string"},description:""}}};var i,m,a;r.parameters={...r.parameters,docs:{...(i=r.parameters)==null?void 0:i.docs,source:{originalSource:`(args: FormProps) => <Form {...args}>
        <FormControl clickable label={{
    children: 'Input Label',
    required: false,
    htmlFor: 'label'
  }}>
            <TextInput id="label" value="some value" />
        </FormControl>
        <Box className="tw-my-2">
            <Button onClick={action('click')}>Save</Button>
        </Box>
    </Form>`,...(a=(m=r.parameters)==null?void 0:m.docs)==null?void 0:a.source}}};const ao=["Default"];export{r as Default,ao as __namedExportsOrder,mo as default};
