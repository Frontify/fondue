import{r as s,j as a}from"./iframe-3oRiCOMA.js";import{I as l}from"./IconIcon-Cp8IKtNh.js";import{F as p,a as r,b as m}from"./FieldsetHeader-DxLS7LHO.js";import"./preload-helper-C1FmrZbK.js";import"./IconSize-BcCrF_mi.js";import"./IconIcon16-BzLNejlL.js";import"./IconIcon24-vcPRIMnE.js";import"./Switch-lhnOq77z.js";import"./useFocusRing-B4Z8FlBA.js";import"./useEffectEvent-1oya5x99.js";import"./InputLabel-3kkok3gm.js";import"./TooltipIcon-omkkg6r0.js";import"./LegacyTooltip-EwG9IAuw.js";import"./useLink-CbszE7S7.js";import"./useFocusable-Bi7WFdCU.js";import"./chain-CYmkXS4K.js";import"./index-De9cKHpm.js";import"./usePopper-BXvVajWh.js";import"./index-BUsYKrk-.js";import"./Button-tdRQVd-X.js";import"./useButton-C27_pHVF.js";import"./focusStyle-Ch_WJ4aJ.js";import"./merge-DI-veSMP.js";import"./Portal-4490uK6y.js";import"./useMemoizedId-CEssXdIF.js";import"./IconCheckMark-B5_KFKnC.js";import"./IconExclamationMarkCircle24-DWw8SKlA.js";import"./IconExclamationMarkTriangle-V3TN4WUG.js";import"./IconExclamationMarkTriangle24-DlSHM1ML.js";import"./IconQuestionMarkCircle-BboJpMia.js";import"./IconCaretDown-BW-06LpU.js";import"./IconCaretDown16-C6_RqQ7I.js";import"./IconMinus-CfPKeAvc.js";import"./IconMinus16-BLY_Jsm5.js";import"./IconPlus-C6L4mIRG.js";import"./IconPlus16-D1hw1s7s.js";const U={title:"Deprecated/Fieldset Header",component:m,tags:["autodocs"],argTypes:{size:{options:[r.Small,r.Medium,r.Large],control:{type:"radio"}},type:{options:Object.values(p),control:{type:"radio"}}},args:{size:r.Large,active:!0,type:p.Default,disabled:!1,bold:!0,children:"Heading",decorator:!0}},t=e=>{const[i,o]=s.useState(e.active);return s.useEffect(()=>{o(e.active)},[e.active]),a.jsx(m,{...e,decorator:e.decorator?a.jsx(l,{}):null,active:i,onClick:()=>o(!i)})};t.__docgenInfo={description:"",methods:[],displayName:"FieldsetHeader",props:{size:{required:!1,tsType:{name:"FieldsetHeaderSize"},description:""},active:{required:!1,tsType:{name:"boolean"},description:""},decorator:{required:!1,tsType:{name:"ReactNode"},description:""},type:{required:!1,tsType:{name:"FieldsetHeaderType"},description:""},disabled:{required:!1,tsType:{name:"boolean"},description:""},bold:{required:!1,tsType:{name:"boolean"},description:""},children:{required:!0,tsType:{name:"string"},description:""},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},as:{required:!1,tsType:{name:"JSX.IntrinsicElements"},description:""},tabIndex:{required:!1,tsType:{name:"number"},description:""},"data-test-id":{required:!1,tsType:{name:"string"},description:""}}};var d,n,c;t.parameters={...t.parameters,docs:{...(d=t.parameters)==null?void 0:d.docs,source:{originalSource:`(args: FieldsetHeaderProps) => {
  const [active, setActive] = useState(args.active);
  useEffect(() => {
    setActive(args.active);
  }, [args.active]);
  return <FieldsetHeaderComponent {...args} decorator={args.decorator ? <IconIcon /> : null} active={active} onClick={() => setActive(!active)} />;
}`,...(c=(n=t.parameters)==null?void 0:n.docs)==null?void 0:c.source}}};const V=["FieldsetHeader"];export{t as FieldsetHeader,V as __namedExportsOrder,U as default};
