import{r as n,j as o}from"./iframe-Cuuz2GJq.js";import{a as d}from"./Box-m4PBwias.js";import{B as c}from"./Button-DcFz9xYt.js";import{F as u}from"./FormControl-DgJ9fxYA.js";import{T as f}from"./TextInput-B0PGVwIc.js";import"./preload-helper-C1FmrZbK.js";import"./borderStyle-D9jrV09G.js";import"./merge-DI-veSMP.js";import"./focusStyle-Ch_WJ4aJ.js";import"./input-DwtTxumk.js";import"./Divider-r2r2FkbT.js";import"./LoadingCircle-Dyv8zZXb.js";import"./Switch-B3xYc1Gy.js";import"./useFocusRing-DgQhTTal.js";import"./useEffectEvent-DxEqDHwu.js";import"./InputLabel-D1BpUpFD.js";import"./TooltipIcon-Dl6pMqy1.js";import"./LegacyTooltip-DOBnvWNZ.js";import"./useLink-D0s49w-R.js";import"./useFocusable-DgoKNfv-.js";import"./chain-DYCdTnn2.js";import"./index-Br928Knc.js";import"./usePopper-BP7kRwwG.js";import"./index-BSoEGWQc.js";import"./Portal-CcpWWYs1.js";import"./IconSize-BcCrF_mi.js";import"./useMemoizedId-DY15yGWN.js";import"./IconCheckMark-BdzytnOu.js";import"./IconExclamationMarkCircle24-qz18QCqO.js";import"./IconExclamationMarkTriangle-BCkhpLUe.js";import"./IconExclamationMarkTriangle24-DNVR-sDp.js";import"./IconQuestionMarkCircle-DjVXr8Ym.js";import"./TabItem-yyqhrrsM.js";import"./elements-BOYmskOL.js";import"./Tooltip-B-KRLugN.js";import"./useClickOutside-Uxy7utgd.js";import"./EnablePortalWrapper-Dp3mgTzX.js";import"./dialog-D9O7a7Fm.js";import"./Tree-EUWwSITk.js";import"./_Uint8Array-CwPxMkg2.js";import"./IconCross-eNHuqyEX.js";import"./validation-C9S5KgfE.js";import"./useButton-CCmdIFzv.js";const t=n.forwardRef(({children:e,"data-test-id":p="fondue-form",...s},l)=>o.jsx("form",{"data-test-id":p,ref:l,...s,children:e}));t.displayName="FondueForm";t.__docgenInfo={description:"",methods:[],displayName:"FondueForm",props:{children:{required:!0,tsType:{name:"ReactNode"},description:""},"data-test-id":{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"'fondue-form'",computed:!1}}}};const{action:x}=__STORYBOOK_MODULE_ACTIONS__,mo={title:"Components/Form",component:t,tags:["autodocs"]},r=e=>o.jsxs(t,{...e,children:[o.jsx(u,{clickable:!0,label:{children:"Input Label",required:!1,htmlFor:"label"},children:o.jsx(f,{id:"label",value:"some value"})}),o.jsx(d,{className:"tw-my-2",children:o.jsx(c,{onClick:x("click"),children:"Save"})})]});r.__docgenInfo={description:"",methods:[],displayName:"Default",props:{children:{required:!0,tsType:{name:"ReactNode"},description:""},"data-test-id":{required:!1,tsType:{name:"string"},description:""}}};var i,m,a;r.parameters={...r.parameters,docs:{...(i=r.parameters)==null?void 0:i.docs,source:{originalSource:`(args: FormProps) => <Form {...args}>
        <FormControl clickable label={{
    children: 'Input Label',
    required: false,
    htmlFor: 'label'
  }}>
            <TextInput id="label" value="some value" />
        </FormControl>
        <Box className="tw-my-2">
            <Button onClick={action('click')}>Save</Button>
        </Box>
    </Form>`,...(a=(m=r.parameters)==null?void 0:m.docs)==null?void 0:a.source}}};const ao=["Default"];export{r as Default,ao as __namedExportsOrder,mo as default};
