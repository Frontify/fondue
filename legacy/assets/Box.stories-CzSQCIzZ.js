import{j as g}from"./iframe-H4EIHqlx.js";import{B as b,a as i,S as v}from"./Box-CeL6hrg8.js";import"./preload-helper-C1FmrZbK.js";import"./borderStyle-D9jrV09G.js";import"./merge-DI-veSMP.js";import"./focusStyle-Ch_WJ4aJ.js";import"./input-DFiASiDy.js";import"./Button-CXaEniIA.js";import"./useButton-mGVAuZHj.js";import"./useFocusable-DTCa4SqE.js";import"./useFocusRing-BgUd5BR7.js";import"./useEffectEvent-C_IQxYhx.js";import"./chain-DQvBJnse.js";import"./index-DlrjtBmU.js";import"./IconSize-BcCrF_mi.js";import"./DialogBody-DhEbP-Iq.js";import"./dialog-D9O7a7Fm.js";import"./Divider-zfqb8AiO.js";import"./Dropdown-D9la7LTr.js";import"./FocusScope-qW6Sf1bq.js";import"./useOverlayTriggerState-D-nAPxky.js";import"./useControlledState-BwCEOs4d.js";import"./useMenuTrigger-2a9WK_4Y.js";import"./useLabels-FTiAqVtv.js";import"./useLocalizedStringFormatter-A6H_epb7.js";import"./context-pc1t5AW0.js";import"./VisuallyHidden-BxoBsTUN.js";import"./helper-BLUOy31a.js";import"./keyboard-Bgy3IRLV.js";import"./SelectionManager-CzbgPH4w.js";import"./useField-CEvqkjOx.js";import"./useFormValidationState-CMOyU9tG.js";import"./usePopper-BDBm9nqb.js";import"./index-DsgG594b.js";import"./MenuItem-Dabj5Jcl.js";import"./IconCaretRight-DSSd_h10.js";import"./IconCheckMark-CHxLPHD4.js";import"./elements-BOYmskOL.js";import"./LoadingCircle-cqNAwJed.js";import"./Trigger-EEtgFzPe.js";import"./IconCaretDown-D2PohoYe.js";import"./IconCaretDown16-CI4FxQbC.js";import"./IconCross-CxjY-Hqb.js";import"./IconExclamationMarkTriangle-K99hKmWz.js";import"./IconExclamationMarkTriangle24-ChMo0sGD.js";import"./IconTrashBin16-DnTUTGRm.js";import"./IconTrashBin24-cmiN-QmN.js";import"./validation-C9S5KgfE.js";import"./EnablePortalWrapper-DYlU6loR.js";import"./Portal-CW7VmUKg.js";import"./useMemoizedId-UwiqPoY6.js";import"./FormControl-Cc6HWobq.js";import"./InputLabel-Dn-dwoK-.js";import"./TooltipIcon-BIasiFqw.js";import"./LegacyTooltip-CjQ6vgqx.js";import"./useLink-d86eSztZ.js";import"./IconExclamationMarkCircle24-CzbbaGxH.js";import"./IconQuestionMarkCircle-DGOXOD6s.js";import"./Switch-CVeASn2J.js";import"./TabItem-D2N0FtOf.js";import"./TextInput-D6FRwz5L.js";import"./Tooltip-m5iD4_xo.js";import"./useClickOutside-BTiX37Ac.js";import"./Tree-CwejBv94.js";import"./_Uint8Array-CwPxMkg2.js";const t={options:Object.values(v),control:{type:"select"},defaultValue:""},Et={title:"Layout/Box",component:i,tags:["autodocs"],argTypes:{className:{type:"string"},paddingX:t,paddingY:t,padding:t,marginX:t,marginY:t,margin:t,"data-test-id":{type:"string"},"aria-label":{type:"string"},as:{options:["div","span"],control:{type:"select"}},children:{table:{disable:!0}}},args:{className:"tw-font-bold tw-flex","data-test-id":b,children:"You can pass any props you want into this component. In the controls you can find examples with camelCased, aria and data attributes."},parameters:{status:{type:"deprecated"},docs:{description:{component:"### This component is deprecated, please use the [new Box layout component](/docs/current_layout-box--documentation) instead."}}}},p=h=>g.jsx(i,{...h}),e=p.bind({}),o=p.bind({});o.args={className:"tw-bg-box-positive hover:tw-bg-box-positive-hover tw-text-box-positive-inverse hover:tw-text-box-positive-inverse-hover"};const r=p.bind({});r.args={className:"tw-flex tw-bg-box-positive hover:tw-bg-box-positive-hover tw-text-box-positive-inverse hover:tw-text-box-positive-inverse-hover",children:g.jsx(i,{as:"span",children:"I am a Box component rendered as a span element inside another Box with display: flex."}),padding:16};var s,a,m;e.parameters={...e.parameters,docs:{...(s=e.parameters)==null?void 0:s.docs,source:{originalSource:`(args: Props) => {
  return <BoxComponent {...args} />;
}`,...(m=(a=e.parameters)==null?void 0:a.docs)==null?void 0:m.source}}};var n,c,d;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`(args: Props) => {
  return <BoxComponent {...args} />;
}`,...(d=(c=o.parameters)==null?void 0:c.docs)==null?void 0:d.source}}};var x,l,u;r.parameters={...r.parameters,docs:{...(x=r.parameters)==null?void 0:x.docs,source:{originalSource:`(args: Props) => {
  return <BoxComponent {...args} />;
}`,...(u=(l=r.parameters)==null?void 0:l.docs)==null?void 0:u.source}}};const It=["Box","BoxWithAliasTokens","BoxWithNestedBoxAsSpan"];export{e as Box,o as BoxWithAliasTokens,r as BoxWithNestedBoxAsSpan,It as __namedExportsOrder,Et as default};
