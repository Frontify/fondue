import{r as m,j as e}from"./iframe-60LeB-BH.js";import{k as g,m as E}from"./fondue-icons352-BMIzTboi.js";import{c as v}from"./styleUtilities-A7Ia-tuh.js";import{L as x}from"./LoadingCircle-DzWq95Cc.js";const w="_root_m6yyd_5",q="_slot_m6yyd_67",b="_input_m6yyd_67",M="_placeholder_m6yyd_72",L="_iconSuccess_m6yyd_150",I="_iconError_m6yyd_158",H="_loadingStatus_m6yyd_171",F="_inputWrapper_m6yyd_195",n={root:w,slot:q,input:b,placeholder:M,iconSuccess:L,iconError:I,loadingStatus:H,inputWrapper:F},p=({children:l,className:u,status:t="neutral","data-test-id":i="fondue-text-input","aria-errormessage":h,placeholder:d,...a},T)=>{const o=m.useRef(!1);return e.jsxs("div",{className:v(n.root,u),"data-status":t,"data-test-id":i,children:[t==="loading"?e.jsx("div",{className:n.loadingStatus,"data-test-id":`${i}-loader`,children:e.jsx(x,{size:"xx-small"})}):null,e.jsxs("div",{className:n.inputWrapper,children:[d&&e.jsx("div",{className:n.placeholder,children:d}),e.jsx("input",{onMouseDown:r=>{o.current=!0,r.currentTarget.dataset.showFocusRing="false"},type:"text",placeholder:d,...a,onFocus:r=>{var s;o.current||(r.target.dataset.showFocusRing="true"),(s=a.onFocus)==null||s.call(a,r)},onBlur:r=>{var s;r.target.dataset.showFocusRing="false",o.current=!1,(s=a.onBlur)==null||s.call(a,r)},ref:T,className:n.input,"aria-invalid":t==="error","aria-errormessage":t==="error"?h:void 0})]}),t==="success"?e.jsx(g,{size:16,className:n.iconSuccess,"data-test-id":`${i}-success-icon`}):null,t==="error"?e.jsx(E,{size:16,className:n.iconError,"data-test-id":`${i}-error-icon`}):null,l]})};p.displayName="TextField.Root";const c=({name:l,className:u,...t},i)=>e.jsx("div",{"data-slot":!0,"data-name":l,...t,ref:i,className:v(n.slot,u)});c.displayName="TextField.Slot";const f=m.forwardRef(p),_=m.forwardRef(c),y=f;y.Root=f;y.Slot=_;p.__docgenInfo={description:"",methods:[],displayName:"TextField.Root",props:{id:{required:!1,tsType:{name:"string"},description:""},name:{required:!1,tsType:{name:"string"},description:""},children:{required:!1,tsType:{name:"ReactNode"},description:"The place where the input slots are placed"},defaultValue:{required:!1,tsType:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]},description:`The default value of the text input
Used for uncontrolled components`},value:{required:!1,tsType:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]},description:"The controlled value of the text input"},type:{required:!1,tsType:{name:"union",raw:"'date' | 'email' | 'hidden' | 'number' | 'password' | 'search' | 'tel' | 'text' | 'time' | 'url'",elements:[{name:"literal",value:"'date'"},{name:"literal",value:"'email'"},{name:"literal",value:"'hidden'"},{name:"literal",value:"'number'"},{name:"literal",value:"'password'"},{name:"literal",value:"'search'"},{name:"literal",value:"'tel'"},{name:"literal",value:"'text'"},{name:"literal",value:"'time'"},{name:"literal",value:"'url'"}]},description:`Type of the text input
@default "text"`},placeholder:{required:!1,tsType:{name:"string"},description:"The placeholder in the text input"},disabled:{required:!1,tsType:{name:"boolean"},description:`Disable the text input
@default false`},required:{required:!1,tsType:{name:"boolean"},description:`Make the text input required in form
@default false`},spellCheck:{required:!1,tsType:{name:"boolean"},description:`Make the text input spell-checkable
@default true`},readOnly:{required:!1,tsType:{name:"boolean"},description:`Make the text input read-only
@default false`},autoComplete:{required:!1,tsType:{name:"string"},description:`Set the type of input so autocomplete can help the user
@default "on"`},maxLength:{required:!1,tsType:{name:"number"},description:"The maximum length of the text input"},status:{required:!1,tsType:{name:"union",raw:"'neutral' | 'success' | 'error' | 'loading'",elements:[{name:"literal",value:"'neutral'"},{name:"literal",value:"'success'"},{name:"literal",value:"'error'"},{name:"literal",value:"'loading'"}]},description:`Status of the text input
@default "neutral"`,defaultValue:{value:"'neutral'",computed:!1}},className:{required:!1,tsType:{name:"string"},description:""},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: ChangeEvent<HTMLInputElement>) => void",signature:{arguments:[{type:{name:"ChangeEvent",elements:[{name:"HTMLInputElement"}],raw:"ChangeEvent<HTMLInputElement>"},name:"event"}],return:{name:"void"}}},description:"Event handler called when the text input value changes"},onBlur:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: FocusEvent<HTMLInputElement>) => void",signature:{arguments:[{type:{name:"FocusEvent",elements:[{name:"HTMLInputElement"}],raw:"FocusEvent<HTMLInputElement>"},name:"event"}],return:{name:"void"}}},description:"Event handler called when the text input is blurred"},onFocus:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: FocusEvent<HTMLInputElement>) => void",signature:{arguments:[{type:{name:"FocusEvent",elements:[{name:"HTMLInputElement"}],raw:"FocusEvent<HTMLInputElement>"},name:"event"}],return:{name:"void"}}},description:"Event handler called when the text input is focused"},onKeyDown:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: KeyboardEvent<HTMLInputElement>) => void",signature:{arguments:[{type:{name:"KeyboardEvent",elements:[{name:"HTMLInputElement"}],raw:"KeyboardEvent<HTMLInputElement>"},name:"event"}],return:{name:"void"}}},description:"Event handler called when a key is pressed"},onKeyUp:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: KeyboardEvent<HTMLInputElement>) => void",signature:{arguments:[{type:{name:"KeyboardEvent",elements:[{name:"HTMLInputElement"}],raw:"KeyboardEvent<HTMLInputElement>"},name:"event"}],return:{name:"void"}}},description:"Event handler called when a key is released"},onSelect:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: SyntheticEvent<HTMLInputElement>) => void",signature:{arguments:[{type:{name:"SyntheticEvent",elements:[{name:"HTMLInputElement"}],raw:"SyntheticEvent<HTMLInputElement>"},name:"event"}],return:{name:"void"}}},description:"Event handler called when the text inside of text input is selected"},"data-test-id":{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"'fondue-text-input'",computed:!1}},"aria-label":{required:!1,tsType:{name:"string"},description:""},"aria-labelledby":{required:!1,tsType:{name:"string"},description:""},"aria-describedby":{required:!1,tsType:{name:"string"},description:""},"aria-errormessage":{required:!1,tsType:{name:"string"},description:""}}};c.__docgenInfo={description:"",methods:[],displayName:"TextField.Slot",props:{children:{required:!0,tsType:{name:"ReactNode"},description:""},name:{required:!1,tsType:{name:"union",raw:"'left' | 'right'",elements:[{name:"literal",value:"'left'"},{name:"literal",value:"'right'"}]},description:""},className:{required:!1,tsType:{name:"string"},description:""}}};f.__docgenInfo={description:"",methods:[],displayName:"ForwardedRefTextFieldRoot",props:{id:{required:!1,tsType:{name:"string"},description:""},name:{required:!1,tsType:{name:"string"},description:""},children:{required:!1,tsType:{name:"ReactNode"},description:"The place where the input slots are placed"},defaultValue:{required:!1,tsType:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]},description:`The default value of the text input
Used for uncontrolled components`},value:{required:!1,tsType:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]},description:"The controlled value of the text input"},type:{required:!1,tsType:{name:"union",raw:"'date' | 'email' | 'hidden' | 'number' | 'password' | 'search' | 'tel' | 'text' | 'time' | 'url'",elements:[{name:"literal",value:"'date'"},{name:"literal",value:"'email'"},{name:"literal",value:"'hidden'"},{name:"literal",value:"'number'"},{name:"literal",value:"'password'"},{name:"literal",value:"'search'"},{name:"literal",value:"'tel'"},{name:"literal",value:"'text'"},{name:"literal",value:"'time'"},{name:"literal",value:"'url'"}]},description:`Type of the text input
@default "text"`},placeholder:{required:!1,tsType:{name:"string"},description:"The placeholder in the text input"},disabled:{required:!1,tsType:{name:"boolean"},description:`Disable the text input
@default false`},required:{required:!1,tsType:{name:"boolean"},description:`Make the text input required in form
@default false`},spellCheck:{required:!1,tsType:{name:"boolean"},description:`Make the text input spell-checkable
@default true`},readOnly:{required:!1,tsType:{name:"boolean"},description:`Make the text input read-only
@default false`},autoComplete:{required:!1,tsType:{name:"string"},description:`Set the type of input so autocomplete can help the user
@default "on"`},maxLength:{required:!1,tsType:{name:"number"},description:"The maximum length of the text input"},status:{required:!1,tsType:{name:"union",raw:"'neutral' | 'success' | 'error' | 'loading'",elements:[{name:"literal",value:"'neutral'"},{name:"literal",value:"'success'"},{name:"literal",value:"'error'"},{name:"literal",value:"'loading'"}]},description:`Status of the text input
@default "neutral"`,defaultValue:{value:"'neutral'",computed:!1}},className:{required:!1,tsType:{name:"string"},description:""},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: ChangeEvent<HTMLInputElement>) => void",signature:{arguments:[{type:{name:"ChangeEvent",elements:[{name:"HTMLInputElement"}],raw:"ChangeEvent<HTMLInputElement>"},name:"event"}],return:{name:"void"}}},description:"Event handler called when the text input value changes"},onBlur:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: FocusEvent<HTMLInputElement>) => void",signature:{arguments:[{type:{name:"FocusEvent",elements:[{name:"HTMLInputElement"}],raw:"FocusEvent<HTMLInputElement>"},name:"event"}],return:{name:"void"}}},description:"Event handler called when the text input is blurred"},onFocus:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: FocusEvent<HTMLInputElement>) => void",signature:{arguments:[{type:{name:"FocusEvent",elements:[{name:"HTMLInputElement"}],raw:"FocusEvent<HTMLInputElement>"},name:"event"}],return:{name:"void"}}},description:"Event handler called when the text input is focused"},onKeyDown:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: KeyboardEvent<HTMLInputElement>) => void",signature:{arguments:[{type:{name:"KeyboardEvent",elements:[{name:"HTMLInputElement"}],raw:"KeyboardEvent<HTMLInputElement>"},name:"event"}],return:{name:"void"}}},description:"Event handler called when a key is pressed"},onKeyUp:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: KeyboardEvent<HTMLInputElement>) => void",signature:{arguments:[{type:{name:"KeyboardEvent",elements:[{name:"HTMLInputElement"}],raw:"KeyboardEvent<HTMLInputElement>"},name:"event"}],return:{name:"void"}}},description:"Event handler called when a key is released"},onSelect:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: SyntheticEvent<HTMLInputElement>) => void",signature:{arguments:[{type:{name:"SyntheticEvent",elements:[{name:"HTMLInputElement"}],raw:"SyntheticEvent<HTMLInputElement>"},name:"event"}],return:{name:"void"}}},description:"Event handler called when the text inside of text input is selected"},"data-test-id":{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"'fondue-text-input'",computed:!1}},"aria-label":{required:!1,tsType:{name:"string"},description:""},"aria-labelledby":{required:!1,tsType:{name:"string"},description:""},"aria-describedby":{required:!1,tsType:{name:"string"},description:""},"aria-errormessage":{required:!1,tsType:{name:"string"},description:""}}};export{y as T,c as a,p as b};
