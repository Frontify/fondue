import{j as t}from"./jsx-runtime-BYYWji4R.js";import{r as o}from"./index-ClcD9ViR.js";import{j as k,l as K,i as S}from"./fondue-icons351-B_bKa-IH.js";const z="_root_1b5jq_5",A="_textarea_1b5jq_73",C="_slot_1b5jq_123",F="_decorator_1b5jq_137",N="_tools_1b5jq_150",I="_toolsButton_1b5jq_162",B="_success_1b5jq_194",D="_error_1b5jq_198",V="_loadingStatus_1b5jq_202",$="_spin_1b5jq_1",r={root:z,textarea:A,slot:C,decorator:F,tools:N,toolsButton:I,success:B,error:D,loadingStatus:V,spin:$},U=({"data-test-id":b="fondue-textarea",autocomplete:q,autosize:w,clearable:u,decorator:c,defaultValue:m,disabled:i,extraActions:s,focusOnMount:y,minRows:_=1,maxRows:v,onEnterPressed:f,readOnly:d,resizable:H,selectable:j=!0,status:l="default",value:T,...n})=>{const x=o.useRef(null),p=o.useRef(!1),[E,h]=o.useState(T??m??""),g=(s==null?void 0:s.length)!==void 0||u||["success","error"].includes(l),M=()=>{h("")},L=e=>{var a;e.key==="Enter"&&(f==null||f(e)),(a=n.onKeyDown)==null||a.call(n,e)};return o.useEffect(()=>{h(T??m??"")},[m,T]),o.useEffect(()=>{var e;y&&((e=x.current)==null||e.focus())},[y]),t.jsxs("div",{className:r.root,"data-autosize":w,"data-clearable":u,"data-disabled":i||d,"data-has-decorator":!!c,"data-has-tools":g,"data-replicated-value":E,"data-resizable":H,"data-status":l,"data-max-rows":!!v,style:{"--max-rows":`${v}`},children:[c?t.jsx("div",{className:r.decorator,children:c}):null,t.jsx("textarea",{...n,onMouseDown:e=>{p.current=!0,e.currentTarget.dataset.showFocusRing="false"},onFocus:e=>{var a;p.current||(e.target.dataset.showFocusRing="true"),(a=n.onFocus)==null||a.call(n,e)},onBlur:e=>{var a;e.target.dataset.showFocusRing="false",p.current=!1,(a=n.onBlur)==null||a.call(n,e)},autoComplete:q?"on":"off",className:r.textarea,disabled:i,onKeyDown:L,onInput:e=>h(e.currentTarget.value),onSelect:e=>{j||(e.currentTarget.selectionStart=e.currentTarget.selectionEnd)},readOnly:d,ref:x,rows:_,value:E}),l==="loading"&&t.jsx("div",{className:r.loadingStatus,"data-test-id":`${b}-loader`}),g&&t.jsxs("div",{className:r.tools,children:[l==="success"&&t.jsx("div",{className:r.success,children:t.jsx(k,{size:20})}),l==="error"&&t.jsx("div",{className:r[l],children:t.jsx(K,{size:20})}),s==null?void 0:s.map(({icon:e,title:a,callback:R})=>t.jsx("button",{className:r.toolsButton,disabled:i||d,onClick:R,title:a,children:e},a)),u&&t.jsx("button",{className:r.toolsButton,onClick:M,disabled:i||d,children:t.jsx(S,{size:20,fill:"currentColor"})})]})]})};U.__docgenInfo={description:"",methods:[],displayName:"Textarea",props:{"data-test-id":{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"'fondue-textarea'",computed:!1}},autocomplete:{required:!1,tsType:{name:"boolean"},description:"If `true`, Textarea will have `autoComplete` functionality"},autosize:{required:!1,tsType:{name:"boolean"},description:"If `true`, component rendered is a auto sizing Textarea"},clearable:{required:!1,tsType:{name:"boolean"},description:"Render `clear` button to clear input on click"},decorator:{required:!1,tsType:{name:"ReactElement"},description:"A `ReactElement` that will be rendered at the start of the `Textarea`"},defaultValue:{required:!1,tsType:{name:"string"},description:"Initial value"},disabled:{required:!1,tsType:{name:"boolean"},description:""},extraActions:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    icon: ReactElement;
    title: string;
    callback: () => void;
}`,signature:{properties:[{key:"icon",value:{name:"ReactElement",required:!0}},{key:"title",value:{name:"string",required:!0}},{key:"callback",value:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}},required:!0}}]}}],raw:"ExtraAction[]"},description:"Collection of extra actions the input can preform"},focusOnMount:{required:!1,tsType:{name:"boolean"},description:"If `true`, Textarea will be focused on mount"},minRows:{required:!1,tsType:{name:"number"},description:`If autosize is false, this is used as rows property for default textarea
@default 1`,defaultValue:{value:"1",computed:!1}},maxRows:{required:!1,tsType:{name:"number"},description:"If `autosize` is `false`, this property is ignored"},onChange:{required:!1,tsType:{name:"ChangeEventHandler",elements:[{name:"HTMLTextAreaElement"}],raw:"ChangeEventHandler<HTMLTextAreaElement>"},description:"Event handler called when the textarea value changes"},onBlur:{required:!1,tsType:{name:"FocusEventHandler",elements:[{name:"HTMLTextAreaElement"}],raw:"FocusEventHandler<HTMLTextAreaElement>"},description:"Event handler called when the text input is blurred"},onFocus:{required:!1,tsType:{name:"FocusEventHandler",elements:[{name:"HTMLTextAreaElement"}],raw:"FocusEventHandler<HTMLTextAreaElement>"},description:"Event handler called when the text input is focused"},onKeyDown:{required:!1,tsType:{name:"KeyboardEventHandler",elements:[{name:"HTMLTextAreaElement"}],raw:"KeyboardEventHandler<HTMLTextAreaElement>"},description:"Event handler called when a key is pressed"},onEnterPressed:{required:!1,tsType:{name:"KeyboardEventHandler",elements:[{name:"HTMLTextAreaElement"}],raw:"KeyboardEventHandler<HTMLTextAreaElement>"},description:"Event handler called when Enter is pressed"},onKeyUp:{required:!1,tsType:{name:"KeyboardEventHandler",elements:[{name:"HTMLTextAreaElement"}],raw:"KeyboardEventHandler<HTMLTextAreaElement>"},description:"Event handler called when a key is released"},onSelect:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: SyntheticEvent<HTMLTextAreaElement>) => void",signature:{arguments:[{type:{name:"SyntheticEvent",elements:[{name:"HTMLTextAreaElement"}],raw:"SyntheticEvent<HTMLTextAreaElement>"},name:"event"}],return:{name:"void"}}},description:"Event handler called when the text inside of text input is selected"},placeholder:{required:!1,tsType:{name:"string"},description:""},readOnly:{required:!1,tsType:{name:"boolean"},description:""},resizable:{required:!1,tsType:{name:"boolean"},description:""},selectable:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"true",computed:!1}},status:{required:!1,tsType:{name:"union",raw:"'default' | 'loading' | 'success' | 'error'",elements:[{name:"literal",value:"'default'"},{name:"literal",value:"'loading'"},{name:"literal",value:"'success'"},{name:"literal",value:"'error'"}]},description:`The current status of the input. It will trigger the corresponding icon to be appended to the Textarea.
@default 'default'`,defaultValue:{value:"'default'",computed:!1}},value:{required:!1,tsType:{name:"string"},description:""}}};export{U as T};
