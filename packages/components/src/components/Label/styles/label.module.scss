/* (c) Copyright Frontify Ltd., all rights reserved. */

@use '../../../utilities/transitions.module.scss';

.root {
    position: relative;
    display: flex;
    gap: var(--spacing-x-small);
    font-family: var(--body-family);
    font-size: var(--typography-font-size-medium);
    line-height: var(--typography-line-height-medium);
    color: var(--color-secondary-default);

    & {
        @include transitions.transition-colors;
    }

    // Hover states for various input types
    &:has(+ * input:hover:not(:disabled)),
    &:has(~ button:hover:not(:disabled)) {
        color: var(--color-primary-default);
    }

    // Peer hover (when this label is a peer)
    :has(&) input:hover:not(:disabled) ~ &,
    :has(&) button:hover:not(:disabled) ~ & {
        color: var(--color-primary-default);
    }

    // Checked/indeterminate states
    [data-state="checked"] + &,
    [data-state="indeterminate"] + & {
        font-weight: 500;
    }

    // Disabled states
    &:has(+ * :disabled),
    &:has(~ :disabled) {
        color: var(--color-disabled-default);
        cursor: not-allowed;
    }

    // Peer disabled
    input:disabled ~ &,
    button:disabled ~ & {
        color: var(--color-disabled-default);
        cursor: not-allowed;
    }

    // Required asterisk
    &[data-required="true"]::after {
        content: "*";
        display: flex;
        margin-left: calc(-1 * var(--spacing-x-small));
        margin-top: -1px;
        font-family: var(--body-family);
        font-size: var(--typography-font-size-small);
        font-weight: 500;
        color: var(--color-error-default);
    }

    &[data-required="true"]:hover::after {
        color: var(--color-error-hover);
    }

    &::after {
        display: none;
    }
}

.hiddenText {
    font-weight: 500;
    opacity: 0;
    pointer-events: none;
}

.visibleText {
    position: absolute;
    inset: 0;
}