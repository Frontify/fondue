/* (c) Copyright Frontify Ltd., all rights reserved. */

@use '../../../utilities/sizeToken.module.scss';
@use '../../../utilities/focusStyle.module.scss';

.table {
    position: relative;
    text-align: start;
    border-collapse: separate;
    border-spacing: 0;
    width: 100%;

    $sticky-base: (
        position: sticky,
        z-index: 1,
        background-color: var(--base-color),
    );

    // Legacy support for deprecated data-sticky-header attribute
    &[data-sticky-header='true'] {
        thead {
            @each $prop, $value in $sticky-base {
                #{$prop}: $value;
            }
            top: 0;
            z-index: 2;
        }
    }

    // Legacy support for deprecated data-sticky-left-column attribute
    &[data-sticky-left-column='true'] {
        .headerCell:first-child,
        .rowCell:first-child {
            @each $prop, $value in $sticky-base {
                #{$prop}: $value;
            }
            inset-inline-start: 0;
        }

        &[data-has-horizontal-overflow='true'] {
            .headerCell:first-child,
            .rowCell:first-child {
                border-inline-end: 1px solid var(--line-color);
            }
        }
    }

    // New approach: sticky columns controlled by tbody attributes
    &:has(tbody[data-first-column-sticky='true']) {
        .headerCell:first-child,
        .rowCell:first-child {
            @each $prop, $value in $sticky-base {
                #{$prop}: $value;
            }
            inset-inline-start: 0;
        }

        &[data-has-horizontal-overflow='true'] {
            .headerCell:first-child,
            .rowCell:first-child {
                border-inline-end: 1px solid var(--line-color);
            }
        }
    }

    &:has(tbody[data-last-column-sticky='true']) {
        .headerCell:last-child,
        .rowCell:last-child {
            @each $prop, $value in $sticky-base {
                #{$prop}: $value;
            }
            inset-inline-end: 0;
        }

        &[data-has-horizontal-overflow='true'] {
            .headerCell:last-child,
            .rowCell:last-child {
                border-inline-start: 1px solid var(--line-color);
            }
        }
    }

    &[data-font-size='small'] {
        font-size: var(--body-size-x-small);
    }

    &[data-font-size='medium'] {
        font-size: var(--body-size-small);
    }

    &[data-full-width='false'] {
        width: auto;
    }

    &[data-layout='fixed'] {
        table-layout: fixed;
    }

    &[data-layout='auto'] {
        table-layout: auto;
        [data-truncate='true'] {
            max-width: 0;
        }
    }

    &[data-no-border='true'] {
        .headerCell {
            border-top: none;
        }

        .row:last-child .rowCell {
            border-bottom: none;
        }
    }
}

.caption {
    padding: sizeToken.get(3) sizeToken.get(2);
    text-align: start;
    color: var(--text-color);
}

.header {
    &[data-sticky='true'] {
        position: sticky;
        top: 0;
        z-index: 2;
        background-color: var(--base-color);
    }
}

.headerCell {
    font-size: var(--body-size-small);
    font-weight: 400;
    line-height: sizeToken.get(4);
    color: var(--text-color-weak);

    border-top: 1px solid var(--line-color);
    border-bottom: 1px solid var(--line-color);

    &:hover {
        color: var(--text-color-hover);
    }

    &[data-sortable='false'] {
        padding-top: 0.75rem;
        padding-bottom: 0.75rem;
        padding-inline-start: calc(0.5rem + var(--table-gutter, 0px) / 2);
        padding-inline-end: calc(0.5rem + var(--table-gutter, 0px) / 2);

        &:first-child {
            padding-inline-start: sizeToken.get(2);
        }

        &:last-child {
            padding-inline-end: sizeToken.get(2);
        }
    }

    &[data-no-shrink='true'] {
        width: 1%;
        white-space: nowrap;
    }
}

.cellContent {
    box-sizing: border-box;
    display: inline-flex;
    width: 100%;
    text-align: inherit;
    align-items: center;
    gap: 0.25rem;
    padding-top: 0.75rem;
    padding-bottom: 0.75rem;
    padding-inline-start: calc(0.5rem + var(--table-gutter, 0px) / 2);
    padding-inline-end: calc(0.5rem + var(--table-gutter, 0px) / 2);

    appearance: none;
    background: none;
    border: none;
    margin: 0;
    font: inherit;
    color: inherit;
    cursor: pointer;

    .headerCell:first-child & {
        padding-inline-start: sizeToken.get(2);
    }

    .headerCell:last-child & {
        padding-inline-end: sizeToken.get(2);
    }

    &[data-active='true'] {
        color: var(--text-color);
    }

    &:focus-visible {
        @include focusStyle.focus-outline;
    }

    .sortIndicator {
        color: var(--text-color-disabled);
    }
}

.body {
    padding: 0 sizeToken.get(6);
}

.row {
    position: relative;
    transition: background-color 0.2s ease;

    &:focus-visible {
        @include focusStyle.focus-outline;
        z-index: 3;
    }

    &[data-selected='true'] {
        background-color: var(--box-selected-color);
    }

    &[data-disabled='true'] {
        opacity: 0.6;
        cursor: not-allowed;
        pointer-events: none;
    }

    &[data-interactive='true'] {
        cursor: pointer;

        &:not([data-disabled='true']) {
            &:not([data-selected='true']):hover {
                background-color: var(--base-color-alt);
            }
        }
    }
}

.rowCell {
    color: var(--text-color);

    font-weight: 400;
    line-height: sizeToken.get(4);
    padding-top: calc(0.5rem + var(--table-gutter, 0px) / 2);
    padding-bottom: calc(0.5rem + var(--table-gutter, 0px) / 2);
    padding-inline-start: calc(0.5rem + var(--table-gutter, 0px) / 2);
    padding-inline-end: calc(0.5rem + var(--table-gutter, 0px) / 2);

    border-bottom: 1px solid var(--line-color);

    &:first-child {
        padding-inline-start: sizeToken.get(2);
    }

    &:last-child {
        padding-inline-end: sizeToken.get(2);
    }
}

.headerCell,
.rowCell {
    &[data-align='left'] {
        text-align: start;

        .cellContent {
            justify-content: flex-start;
        }
    }

    &[data-align='center'] {
        text-align: center;

        .cellContent {
            justify-content: center;
        }
    }

    &[data-align='right'] {
        text-align: end;

        .cellContent {
            justify-content: flex-end;
        }
    }

    &[data-truncate='true']:not(:has(button)),
    &[data-truncate='true'] .buttonText {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }
}
